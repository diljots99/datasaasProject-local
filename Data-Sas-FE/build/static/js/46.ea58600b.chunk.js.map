{"version":3,"sources":["components/companySubPages/Control/styles.js","components/companySubPages/Control/Table.jsx","components/companySubPages/Control/index.jsx"],"names":["useStyles","makeStyles","searchcontainer","display","justifyContent","alignItems","exportButton","backgroundColor","fontWeight","marginLeft","chip","width","textAlign","fontSize","borderRadius","Table","columns","data","fetchData","controlledPageCount","pageCount","history","useHistory","classess","useTable","initialState","pageIndex","manualPagination","useSortBy","usePagination","getTableProps","headerGroups","rows","prepareRow","canPreviousPage","page","canNextPage","gotoPage","pageOptions","nextPage","setPageSize","previousPage","state","pageSize","useEffect","className","class","id","map","headerGroup","getHeaderGroupProps","headers","column","Header","getHeaderProps","getSortByToggleProps","render","style","src","alt","Button","color","variant","row","i","getRowProps","cells","cell","console","log","onClick","push","getCellProps","Select","labelId","value","onChange","e","Number","target","aria-label","disabled","aria-hidden","position","top","buttons","renderPageButton","RelatedPersonalInfo","React","useMemo","name","natureOfControl","status","kind","nationality","dob","residencialCountry","address","useState","tabledata","settableData","loading","setLoading","setPageCount","compSumfetchIdRef","useRef","accessor","Cell","useCallback","fetchId","current","setTimeout","startRow","endRow","slice","Math","ceil","length","Grid","container","marginBottom","item","xs","sm","Typography","background","marginRight","size","startIcon","TextField","placeholder","InputProps","endAdornment","InputAdornment","IconButton"],"mappings":"mJAEaA,EAAYC,YAAW,CAChCC,gBAAiB,CACbC,QAAS,OACTC,eAAgB,WAChBC,WAAW,UAEbC,aAAc,CACZC,gBAAiB,UACjBC,WAAY,OACZC,WAAW,QAEbC,KAAK,CACHC,MAAM,OACNC,UAAU,SACVJ,WAAY,OACZK,SAAU,OACVC,aAAa,S,yFCJN,SAASC,EAAT,GAKX,IAJFC,EAIC,EAJDA,QACAC,EAGC,EAHDA,KACAC,EAEC,EAFDA,UACWC,EACV,EADDC,UAEMC,EAAUC,cACVC,EAAWvB,IACjB,EAeIwB,mBACF,CACER,UACAC,OACAQ,aAAc,CAAEC,UAAW,GAC3BC,kBAAkB,EAClBP,UAAWD,GAEbS,YACAC,iBAvBAC,EADF,EACEA,cACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,KACAC,EAJF,EAIEA,WAEAC,GANF,EAKEC,KALF,EAMED,iBACAE,EAPF,EAOEA,YAEAC,GATF,EAQEC,YARF,EASED,UAEAjB,GAXF,EAUEmB,SAVF,EAWEnB,WAEAoB,GAbF,EAYEC,aAZF,EAaED,aAbF,IAcEE,MAAShB,EAdX,EAcWA,UAAWiB,EAdtB,EAcsBA,SAatBC,qBAAU,WACR1B,EAAU,CAAEQ,YAAWiB,eACtB,CAACzB,EAAWQ,EAAWiB,IAkB1B,OACE,sBAAKE,UAAU,OAAf,UACE,qBAAKA,UAAU,YAAf,SACE,gDAAOC,MAAM,cAAcC,GAAG,gBAAmBjB,KAAjD,cAEGC,EAAaiB,KAAI,SAACC,GAAD,OAChB,8CAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQH,KAAI,SAACI,GACxB,OACE,6CACEP,UACoB,SAAlBO,EAAOC,OACH,cACkB,YAAlBD,EAAOC,OACP,YACA,gBAGFD,EAAOE,eAAeF,EAAOG,yBATnC,cAWGH,EAAOI,OAAO,UACf,sBAAMC,MAAO,CAAChD,WAAW,OAAzB,SACE,qBAAKiD,IAAK,mBAAoBC,IAAI,qCAQxD,qBAAKd,UAAU,aAAf,SAEM,cAACe,EAAA,EAAD,CACEf,UAAWtB,EAASjB,aACpBuD,MAAM,UACNC,QAAQ,YAHV,sBAWK9B,EAAKgB,KAAI,SAACe,EAAKC,GAEd,OADA/B,EAAW8B,GAET,8CAAQA,EAAIE,eAAZ,aACGF,EAAIG,MAAMlB,KAAI,SAACmB,GAEd,OADAC,QAAQC,IAAI,YAAaF,GAEvB,4CACEG,QAAS,kBAAMjD,EAAQkD,QACvB1B,UACyB,SAAvBsB,EAAKf,OAAOC,OACR,cACuB,YAAvBc,EAAKf,OAAOC,OACZ,YACA,gBAEFc,EAAKK,gBATX,aAWGL,EAAKX,OAAO,0BAU7B,sBAAKX,UAAU,aAAaY,MAAO,CAAErD,eAAgB,YAArD,UACE,cAACqE,EAAA,EAAD,CACE5B,UAAU,SACV6B,QAAQ,oCACR3B,GAAG,8BACH4B,MAAOhC,EACPiC,SAAU,SAACC,GACTrC,EAAYsC,OAAOD,EAAEE,OAAOJ,SANhC,SASG,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAI3B,KAAI,SAACL,GAAD,OAC3B,wBAAuBgC,MAAOhC,EAA9B,SACGA,GADUA,QAKjB,qBAAKqC,aAAW,0BAAhB,SACN,qBAAInC,UAAU,aAAd,UACE,oBAAIA,UAAU,YAAYyB,QAAS,kBAAMjC,EAAS,IAAI4C,UAAW/C,EAAjE,SACI,sBAAMgD,cAAY,OAAOzB,MAAO,CAAE0B,SAAU,WAAaC,IAAK,QAA9D,oBA1GmB,WAEvB,IADA,IAAIC,EAAU,GADe,WAEpBrB,GACPqB,EAAQd,KACN,wBACE1B,UAAU,oBACVyB,QAAS,kBAAMjC,EAAS2B,IACxBP,MAAO,CAAElD,gBAAiBmB,GAAasC,EAAI,UAAY,MAHzD,SAKGA,EAAI,MAPFA,EAAI,EAAGA,EAAI5C,EAAW4C,IAAM,EAA5BA,GAWT,OAAOqB,EA+FNC,GACD,oBAAIzC,UAAU,YAAYyB,QAAS,kBAAMjC,EAASjB,EAAY,IAAI6D,UAAW7C,EAA7E,SACI,sBAAM8C,cAAY,OAAOzB,MAAO,CAAE0B,SAAU,WAAaC,IAAK,QAA9D,+B,sBCnBOG,UA1Ia,WACxB,IAAMhE,EAAWvB,IACXiB,EAAOuE,IAAMC,SACf,iBAAM,CACF,CACI1C,GAAI,EACJ2C,KAAK,wBACLC,gBAAgB,8BAChBC,OAAO,SACPC,KAAK,gDACLC,YAAY,KACZC,IAAI,KACJC,mBAAmB,KACnBC,QAAQ,SAIhB,IAEJ,EAAkCT,IAAMU,SAAS,IAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BZ,IAAMU,UAAS,GAA7C,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAkCd,IAAMU,SAAS,GAAjD,mBAAO9E,EAAP,KAAkBmF,EAAlB,KACMC,EAAoBhB,IAAMiB,OAAO,GACjCzF,EAAUwE,IAAMC,SAClB,iBAAM,CACF,CACIpC,OAAQ,OACRqD,SAAU,OACVC,KAAK,YAAY,IAAVhC,EAAS,EAATA,MACH,OAAQ,sBAAKlB,MAAO,CAACtD,QAAS,OAAQC,eAAgB,gBAA9C,UACJ,qBAAMsD,IAAK,iBAAkBC,IAAI,OAClCgB,OAIX,CACItB,OAAQ,oBACRqD,SAAU,mBAEd,CACIrD,OAAQ,SACRqD,SAAU,SACVC,KAAK,YAAY,IAAVhC,EAAS,EAATA,MACH,OAAQ,qBAAM9B,UAAWtB,EAASb,KAAM+C,MAAO,CAAClD,gBAAgB,UAAUsD,MAAM,WAAxE,SACLc,MAIX,CACItB,OAAQ,OACRqD,SAAU,QAGd,CACIrD,OAAQ,cACRqD,SAAU,eAEd,CACIrD,OAAQ,MACRqD,SAAU,OAEd,CACIrD,OAAQ,oBACRqD,SAAU,sBAEd,CACIrD,OAAQ,UACRqD,SAAU,cAGlB,IAGExF,EAAYsE,IAAMoB,aAAY,YAA8B,IAA3BjE,EAA0B,EAA1BA,SAAUjB,EAAgB,EAAhBA,UACvCmF,IAAYL,EAAkBM,QACpCR,GAAW,GAEXS,YAAW,WACP,GAAIF,IAAYL,EAAkBM,QAAS,CACvC,IAAME,EAAWrE,EAAWjB,EACtBuF,EAASD,EAAWrE,EAC1ByD,EAAanF,EAAKiG,MAAMF,EAAUC,IAClCV,EAAaY,KAAKC,KAAKnG,EAAKoG,OAAS1E,IACrC2D,GAAW,MAEhB,OACJ,IACH,OAEI,mCACI,gCAEI,eAACgB,EAAA,EAAD,CAAMC,WAAS,EAAC9D,MAAO,CAAE+D,aAAc,QAAvC,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACC,EAAA,EAAD,CAAY9D,QAAQ,KAAKL,MAAO,CAAEjD,WAAY,KAA9C,uBAEJ,eAAC8G,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAG9E,UAAWtB,EAASrB,gBAA9C,UACI,cAAC0D,EAAA,EAAD,CACIf,UAAWtB,EAASqC,OACpBH,MAAO,CAAEoE,WAAY,UAAWhE,MAAO,UAAWiE,YAAa,QAC/DhE,QAAQ,YACRiE,KAAK,QACLC,UAAW,qBAAKtE,IAAK,qBAAsBC,IAAI,sBALnD,oBAUA,cAACsE,EAAA,EAAD,CACInE,QAAQ,WACRiE,KAAK,QACLG,YAAY,SACZC,WAAY,CACRC,aACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,iBAS5B,cAACvH,EAAD,CACIC,QAASA,EACTC,KAAMkF,EACNjF,UAAWA,EACXmF,QAASA,EACTjF,UAAWA","file":"static/js/46.ea58600b.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles({\r\n    searchcontainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        alignItems:\"center\",\r\n      },\r\n      exportButton: {\r\n        backgroundColor: \"#40ACFB\",\r\n        fontWeight: \"bold\",\r\n        marginLeft:\"10px\"\r\n      },\r\n      chip:{\r\n        width:\"80px\",\r\n        textAlign:\"center\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"18px\",\r\n        borderRadius:\"5px\"\r\n      }\r\n})","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  Button,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\nimport { useTable, usePagination, useSortBy } from \"react-table\";\r\n\r\nexport default function Table({\r\n  columns,\r\n  data,\r\n  fetchData,\r\n  pageCount: controlledPageCount,\r\n}) {\r\n  const history = useHistory();\r\n  const classess = useStyles();\r\n  const {\r\n    getTableProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    gotoPage,\r\n    nextPage,\r\n    pageCount,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0 },\r\n      manualPagination: true,\r\n      pageCount: controlledPageCount,\r\n    },\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchData({ pageIndex, pageSize });\r\n  }, [fetchData, pageIndex, pageSize]);\r\n\r\n  const renderPageButton = () => {\r\n    let buttons = [];\r\n    for (let i = 0; i < pageCount; i++) {\r\n      buttons.push(\r\n        <button\r\n          className=\"pagination-button\"\r\n          onClick={() => gotoPage(i)}\r\n          style={{ backgroundColor: pageIndex == i ? \"#40ACFB\" : null }}\r\n        >\r\n          {i + 1}\r\n        </button>\r\n      );\r\n    }\r\n    return buttons;\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"tableWrap\">\r\n        <table class=\"role-header\" id=\"table-to-xls\" {...getTableProps()}>\r\n          {/* Table Head */}\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => {\r\n                return (\r\n                  <th\r\n                    className={\r\n                      column.Header === \"Name\"\r\n                        ? \"borderStart\"\r\n                        : column.Header === \"Address\"\r\n                        ? \"borderEnd\"\r\n                        : \"borderCenter\"\r\n                    }\r\n              \r\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                  >\r\n                    {column.render(\"Header\")}\r\n                    <span style={{marginLeft:\"5px\"}}>\r\n                      <img src={\"/images/Sort.png\"} alt=\"company-note-list\" />\r\n                    </span>\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          ))}\r\n\r\n<div className=\"export-btn\">\r\n      \r\n      <Button\r\n        className={classess.exportButton}\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n      >\r\n        Export\r\n      </Button>\r\n      </div>\r\n\r\n          {/* Table Data */}\r\n\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  console.log(\"cell data\", cell);\r\n                  return (\r\n                    <td\r\n                      onClick={() => history.push()}\r\n                      className={\r\n                        cell.column.Header === \"Name\"\r\n                          ? \"borderStart\"\r\n                          : cell.column.Header === \"Address\"\r\n                          ? \"borderEnd\"\r\n                          : \"borderCenter\"\r\n                      }\r\n                      {...cell.getCellProps()}\r\n                    >\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </table>\r\n      </div>\r\n      {/* for Pagination */}\r\n      <div className=\"pagination\" style={{ justifyContent: \"flex-end\" }}>\r\n        <Select\r\n          className=\"select\"\r\n          labelId=\"demo-controlled-open-select-label\"\r\n          id=\"demo-controlled-open-select\"\r\n          value={pageSize}\r\n          onChange={(e) => {\r\n            setPageSize(Number(e.target.value));\r\n          }}\r\n        >\r\n          {[5, 10, 20, 30, 40, 50].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              {pageSize}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n        <nav aria-label=\"Page navigation example\">\r\n  <ul className=\"pagination\">\r\n    <li className=\"page-item\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n        <span aria-hidden=\"true\" style={{ position: \"relative\" , top: \"-3px\"}}>&laquo;</span>\r\n    </li>\r\n    {renderPageButton()}\r\n    <li className=\"page-item\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n        <span aria-hidden=\"true\" style={{ position: \"relative\" , top: \"-3px\"}}>&raquo;</span>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { useStyles } from \"./styles\";\r\nimport { Grid, Typography, Button, InputAdornment, TextField, IconButton } from \"@material-ui/core\";\r\nimport Table from \"./Table\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst RelatedPersonalInfo = () => {\r\n    const classess = useStyles();\r\n    const data = React.useMemo(\r\n        () => [\r\n            {\r\n                id: 1,\r\n                name:\"Exampals Holding Ltd.\",\r\n                natureOfControl:\"Ownership of shares 75-100%\",\r\n                status:\"Active\",\r\n                kind:\"Corporate entity person with significant role\",\r\n                nationality:\"--\",\r\n                dob:\"--\",     \r\n                residencialCountry:\"--\",\r\n                address:\"--\"    \r\n            },\r\n           \r\n        ],\r\n        []\r\n    );\r\n    const [tabledata, settableData] = React.useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageCount, setPageCount] = React.useState(0);\r\n    const compSumfetchIdRef = React.useRef(0);\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: \"Name\",\r\n                accessor: \"name\",\r\n                Cell:({value})=>{\r\n                    return  <div style={{display: \"flex\", justifyContent: \"space-evenly\"}}>\r\n                        <img  src={\"/images/in.png\"} alt=\"in\" />\r\n                      {value}\r\n                      </div>\r\n                  }\r\n            },\r\n            {\r\n                Header: \"Nature of Control\",\r\n                accessor: \"natureOfControl\",\r\n            },\r\n            {\r\n                Header: \"Status\",\r\n                accessor: \"status\",\r\n                Cell:({value})=>{\r\n                    return  <div  className={classess.chip} style={{backgroundColor:\"#ccecd7\",color:\"#03A339\" }}>\r\n                      {value}\r\n                      </div>\r\n                  }\r\n            },\r\n            {\r\n                Header: \"kind\",\r\n                accessor: \"kind\",\r\n           \r\n            },\r\n            {\r\n                Header: \"Nationality\",\r\n                accessor: \"nationality\",\r\n            },\r\n            {\r\n                Header: \"DOB\",\r\n                accessor: \"dob\",\r\n            },\r\n            {\r\n                Header: \"Residence Country\",\r\n                accessor: \"residencialCountry\",\r\n            },\r\n            {\r\n                Header: \"Address\",\r\n                accessor: \"address\",\r\n            },\r\n        ],\r\n        []\r\n    );\r\n\r\n    const fetchData = React.useCallback(({ pageSize, pageIndex }) => {\r\n        const fetchId = ++compSumfetchIdRef.current;\r\n        setLoading(true);\r\n\r\n        setTimeout(() => {\r\n            if (fetchId === compSumfetchIdRef.current) {\r\n                const startRow = pageSize * pageIndex;\r\n                const endRow = startRow + pageSize;\r\n                settableData(data.slice(startRow, endRow));\r\n                setPageCount(Math.ceil(data.length / pageSize));\r\n                setLoading(false);\r\n            }\r\n        }, 1000);\r\n    }, []);\r\n    return (\r\n\r\n        <>\r\n            <div>\r\n\r\n                <Grid container style={{ marginBottom: \"10px\" }} >\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Typography variant=\"h5\" style={{ fontWeight: 600 }}>Control</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} className={classess.searchcontainer}>\r\n                        <Button\r\n                            className={classess.Button}\r\n                            style={{ background: \"#FFFFFF\", color: \"#000000\", marginRight: \"10px\" }}\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            startIcon={<img src={\"/images/Filter.png\"} alt=\"company-note-list\" />}\r\n                        >\r\n\r\n                            Filter\r\n                        </Button>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            placeholder=\"search\"\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment>\r\n                                        <IconButton>\r\n                                            <SearchIcon />\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                )\r\n                            }} />\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Table\r\n                    columns={columns}\r\n                    data={tabledata}\r\n                    fetchData={fetchData}\r\n                    loading={loading}\r\n                    pageCount={pageCount}\r\n                />\r\n\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\nexport default RelatedPersonalInfo;"],"sourceRoot":""}