{"version":3,"sources":["pages/CompanyNotes/styles.js","pages/CompanyNotes/index.jsx"],"names":["useStyles","makeStyles","main","margin","paper","height","width","border","borderRadius","searchcontainer","display","justifyContent","actionContainer","alignItems","marginTop","checkBox","downloadButton","backgroundColor","fontWeight","fontFamily","fontSize","lineHeight","deleteButton","marginLeft","tableHeadFirst","tableHeadLast","companyNotes","overflowX","whiteSpace","borderCollapse","borderSpacing","borderBottom","borderTop","background","borderTopLeftRadius","borderBottomLeftRadius","borderLeft","textAlign","borderTopRightRadius","borderBottomRightRadius","borderRight","padding","CompanyNoteList","classess","dataToken","JSON","parse","sessionStorage","getItem","useState","allSelected","setAllSelected","checked","setChecked","postDeleteRenderHelper","setPostDeleteRenderHelper","useEffect","temp","data","map","item","index","id","dispatch","useDispatch","useSelector","state","watch","getCompanyNotes","company","user_id","companyName","n_company_name","createdOn","createdAt","columns","React","useMemo","Header","accessor","Cell","value","row","Grid","container","Checkbox","size","includes","original","onChange","filter","IconButton","onClick","temp2","notes_id","deleteData","toBeDeleted","deleteCompanyNotes","Table","useTable","getTableProps","headerGroups","rows","prepareRow","className","TableHead","tableheader","headerGroup","TableRow","getHeaderGroupProps","headers","column","console","log","TableCell","getHeaderProps","companynoteheader","render","TableBody","Typography","variant","style","Button","color","dataToBeDeleted","i","getRowProps","cells","cell","getCellProps","comLast","marginBottom","xs","sm","TextField","textTransform","placeholder","InputProps","endAdornment","InputAdornment"],"mappings":"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","file":"static/js/61.52472011.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core'\r\n\r\nexport const useStyles = makeStyles({\r\n  main: {\r\n    margin: \"40px\"\r\n  },\r\n\r\n  paper: {\r\n    height: 300,\r\n    width: 250,\r\n    border: \"1px solid\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  searchcontainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  actionContainer: {\r\n    justifyContent: \"space-between\",\r\n    // width: \"150%\",\r\n    alignItems: \"center\",\r\n    marginTop: \"10px\",\r\n    display:\"flex\"\r\n  },\r\n  checkBox: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  downloadButton: {\r\n    backgroundColor: \"#b8bbb9\",\r\n    fontWeight: \"500\",\r\n    fontFamily: \"Poppins\",\r\n    fontSize: \"22px\",\r\n    lineHeight: \"44px\",\r\n  },\r\n  deleteButton: {\r\n    backgroundColor: \"#ff0047\",\r\n    fontWeight: \"500\",\r\n    fontFamily: \"Poppins\",\r\n    fontSize: \"22px\",\r\n    lineHeight: \"44px\",\r\n    marginLeft:\"10px\"\r\n  },\r\n  tableHeadFirst: {\r\n    borderRadius: \" 12px 0 0 12px\"\r\n  },\r\n  tableHeadLast: {\r\n    borderRadius: \"0 12px 12px 0\"\r\n  },\r\n  companyNotes:{\r\n    width: \"100%\",\r\n    overflowX: \"auto\",\r\n    whiteSpace: \"nowrap\",\r\n    borderCollapse: \"separate\",\r\n    borderSpacing: \"0 15px\",\r\n    '& th' :{\r\n      borderBottom: \"1px solid #DCD9D9\",\r\n      borderTop: \"1px solid #DCD9D9\",\r\n      background: \"#f1f1f1\",\r\n    },\r\n    '& th:first-child' :{\r\n      borderTopLeftRadius: \"4px\",\r\n      borderBottomLeftRadius: \"4px\",\r\n      borderLeft: \"1px solid #DCD9D9\",\r\n      textAlign: \"center\",\r\n    },\r\n    '& th:last-child' :{\r\n      borderTopRightRadius: \"4px\",\r\n      borderBottomRightRadius: \"4px\",\r\n      borderRight: \"1px solid #DCD9D9\",\r\n      textAlign: \"right\",\r\n    },\r\n    '& tr:first-child' :{\r\n      '& td':{\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n      },\r\n    },\r\n    '& td:first-child' :{\r\n      borderTopLeftRadius: \"4px\",\r\n      borderBottomLeftRadius: \"4px\",\r\n      borderLeft: \"1px solid #DCD9D9\",\r\n    },\r\n    '& td:last-child' :{\r\n      borderTopRightRadius: \"4px\",\r\n      borderBottomRightRadius: \"4px\",\r\n      borderRight: \"1px solid #DCD9D9\",\r\n      textAlign: \"right\",\r\n      '& div':{\r\n        justifyContent: \"end!important\"\r\n      }\r\n    },\r\n    '& td' :{\r\n      borderBottom: \"1px solid #DCD9D9\",\r\n      borderTop: \"1px solid #DCD9D9\",\r\n      background: \"#fff\",\r\n      padding: \"8px 16px\",\r\n    },\r\n    '& tr:hover':{\r\n      '& td':{\r\n      background: \"#EFEFEF\",\r\n      },\r\n    },\r\n  },\r\n});","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    TextField,\r\n    IconButton,\r\n    InputAdornment,\r\n    Button,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport MaUTable from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport DownloadIcon from \"@mui/icons-material/Download\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { useTable } from \"react-table\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    getCompanyNotes,\r\n    deleteCompanyNotes,\r\n} from \"../../redux/actions/watchAction\";\r\n\r\nconst CompanyNoteList = () => {\r\n    const classess = useStyles();\r\n    let dataToken = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n    const [allSelected, setAllSelected] = useState(false);\r\n    const [checked, setChecked] = useState([]);\r\n    const [postDeleteRenderHelper, setPostDeleteRenderHelper] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!allSelected) {\r\n            setChecked([]);\r\n        } else {\r\n            const temp = data.map((item, index) => {\r\n                return item.id;\r\n            });\r\n            setChecked(temp);\r\n        }\r\n    }, [allSelected]);\r\n\r\n    const dispatch = useDispatch();\r\n    const { companyNotes } = useSelector((state) => state.watch);\r\n\r\n    useEffect(() => {\r\n        dispatch(getCompanyNotes());\r\n    }, [postDeleteRenderHelper]);\r\n\r\n    const data = companyNotes.map((company) => {\r\n        return {\r\n            id: company.id,\r\n            user_id: company.user_id,\r\n            companyName: company.n_company_name,\r\n\r\n            createdOn: company.createdAt,\r\n        };\r\n    });\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: \"Company Name\",\r\n                accessor: \"companyName\",\r\n                Cell: ({ value, row }) => {\r\n                    return (\r\n                        <Grid container alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Checkbox\r\n                                    size=\"small\"\r\n                                    checked={checked.includes(row.original.id)}\r\n                                    onChange={() => {\r\n                                        // console.log(\r\n                                        //     \"hehe\",\r\n                                        //     row,\r\n                                        //     checked,\r\n                                        //     checked.includes(row.original.id)\r\n                                        // );\r\n                                        if (checked.includes(row.original.id)) {\r\n                                            const temp = checked.filter(\r\n                                                (item) =>\r\n                                                    item !== row.original.id\r\n                                            );\r\n                                            setChecked(temp);\r\n                                        } else {\r\n                                            const temp = [\r\n                                                ...checked,\r\n                                                row.original.id,\r\n                                            ];\r\n                                            setChecked(temp);\r\n                                            // console.log(temp);\r\n                                        }\r\n                                        // console.log(checked);\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item>{value}</Grid>\r\n                        </Grid>\r\n                    );\r\n                },\r\n                width: 200,\r\n            },\r\n           \r\n            {\r\n                Header: \"created on\",\r\n                accessor: \"createdOn\",\r\n            },\r\n            {\r\n                Header: \"Actions\",\r\n                accessor: \"id\",\r\n                Cell: ({ row }) => {\r\n                    return (\r\n                        <Grid container>\r\n                            <Grid item>\r\n                                <IconButton>\r\n                                    <DownloadIcon />\r\n                                </IconButton>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <IconButton>\r\n                                    <DeleteIcon\r\n                                        onClick={() => {\r\n                                            const temp = checked.filter(\r\n                                                (item) =>\r\n                                                    item !== row.original.id\r\n                                            );\r\n                                            setChecked(temp);\r\n                                            const temp2 = {\r\n                                                notes_id: [row.original.id],\r\n                                                user_id: dataToken.id,\r\n                                            };\r\n                                            deleteData(temp2);\r\n                                            setPostDeleteRenderHelper(\r\n                                                !postDeleteRenderHelper\r\n                                            );\r\n                                        }}\r\n                                    />\r\n                                </IconButton>\r\n                            </Grid>\r\n                        </Grid>\r\n                    );\r\n                },\r\n            },\r\n        ],\r\n        [checked, data, allSelected]\r\n    );\r\n\r\n    const deleteData = (toBeDeleted) => {\r\n        dispatch(deleteCompanyNotes(toBeDeleted));\r\n    };\r\n\r\n    function Table({ columns, data }) {\r\n        // Use the state and functions returned from useTable to build your UI\r\n        const { getTableProps, headerGroups, rows, prepareRow } = useTable({\r\n            columns,\r\n            data,\r\n        });\r\n\r\n        // Render the UI for your table\r\n        return (\r\n            <MaUTable {...getTableProps()} className={classess.companyNotes}>\r\n                <TableHead className={classess.tableheader}>\r\n                    {headerGroups.map((headerGroup) => (\r\n                        <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map((column) => {\r\n                                console.log(\"col ,\", column);\r\n                                return (\r\n                                    <TableCell\r\n                                        {...column.getHeaderProps()}\r\n                                        className={classess.companynoteheader}\r\n                                    >\r\n                                        {column.render(\"Header\")}\r\n                                    </TableCell>\r\n                                );\r\n                            })}\r\n                        </TableRow>\r\n                    ))}\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                    {/* action container   */}\r\n                    <TableRow>\r\n                        <TableCell>\r\n                            <div className={classess.checkBox}>\r\n                                <Checkbox\r\n                                    size=\"small\"\r\n                                    checked={allSelected}\r\n                                    onChange={() => {\r\n                                        setAllSelected(!allSelected);\r\n                                    }}\r\n                                />\r\n                                <Typography variant=\"h6\">Select all</Typography>\r\n                            </div>\r\n                        </TableCell>\r\n                        <TableCell></TableCell>\r\n                        <TableCell style={{ textAlign: \"right\" }}>\r\n                            <div>\r\n                                <Button\r\n                                    className={classess.downloadButton}\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    variant=\"contained\"\r\n                                >\r\n                                    Download Selected\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    className={classess.deleteButton}\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    variant=\"contained\"\r\n                                    onClick={() => {\r\n                                        const dataToBeDeleted = {\r\n                                            notes_id: checked,\r\n                                            user_id: dataToken.id,\r\n                                        };\r\n                                        deleteData(dataToBeDeleted);\r\n                                        setPostDeleteRenderHelper(\r\n                                            !postDeleteRenderHelper\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    Delete Selected\r\n                                </Button>\r\n                            </div>\r\n                        </TableCell>\r\n                    </TableRow>\r\n\r\n                    {rows.map((row, i) => {\r\n                        prepareRow(row);\r\n                        return (\r\n                            <TableRow {...row.getRowProps()}>\r\n                                {row.cells.map((cell) => {\r\n                                    console.log(\"row hue\", cell);\r\n                                    return (\r\n                                        <TableCell\r\n                                            {...cell.getCellProps()}\r\n                                            className={classess.comLast}\r\n                                        >\r\n                                            {cell.render(\"Cell\")}\r\n                                        </TableCell>\r\n                                    );\r\n                                })}\r\n                            </TableRow>\r\n                        );\r\n                    })}\r\n                </TableBody>\r\n            </MaUTable>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={classess.main}>\r\n            <Grid container style={{ marginBottom: \"10px\" }}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                        style={{\r\n                            fontSize: \"26px\",\r\n                            fontFamily: \"Poppins\",\r\n                            lineHeight: \"39px\",\r\n                            fontWeight: \"600\",\r\n                            color: \"#000000\",\r\n                        }}\r\n                    >\r\n                        Company Note List\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} className={classess.searchcontainer}>\r\n                    <TextField\r\n                        style={{\r\n                            background: \"#FFFFFF\",\r\n                            border: \"1px solid #DCD9D9\",\r\n                            textTransform: \"capitalize\",\r\n                            borderRadius: \"6px\",\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        placeholder=\"Search\"\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment>\r\n                                    <IconButton>\r\n                                        <SearchIcon />\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {/* Table component */}\r\n            <Table columns={columns} data={data} />\r\n        </div>\r\n    );\r\n};\r\nexport default CompanyNoteList;\r\n"],"sourceRoot":""}