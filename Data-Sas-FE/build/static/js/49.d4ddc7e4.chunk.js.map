{"version":3,"sources":["components/companySubPages/IndustryWise/styles.js","components/companySubPages/IndustryWise/Table.jsx","components/companySubPages/IndustryWise/chart.js","components/companySubPages/IndustryWise/index.jsx"],"names":["useStyles","makeStyles","searchcontainer","display","justifyContent","alignItems","chip","width","textAlign","fontWeight","fontSize","borderRadius","graphic","fill","fontFamily","lineHeight","padding","minHeight","Table","columns","data","fetchData","controlledPageCount","pageCount","history","useHistory","useTable","initialState","pageIndex","manualPagination","usePagination","getTableProps","headerGroups","rows","prepareRow","canPreviousPage","page","canNextPage","gotoPage","pageOptions","nextPage","setPageSize","previousPage","state","pageSize","useEffect","className","class","id","map","headerGroup","getHeaderGroupProps","headers","column","style","Header","getHeaderProps","render","row","i","getRowProps","cells","cell","onClick","push","getCellProps","Select","labelId","value","onChange","e","Number","target","aria-label","disabled","aria-hidden","position","top","buttons","backgroundColor","renderPageButton","SmoothLine","props","series","name","options","chart","height","type","stroke","curve","xaxis","categories","tickAmount","title","text","align","color","gradient","shade","gradientToColors","shadeIntensity","opacityFrom","opacityTo","stops","yaxis","min","max","border","background","this","React","Component","IndustryWise","classess","useMemo","heading","year1","year2","year3","year4","useState","tabledata","settableData","loading","setLoading","setPageCount","compSumfetchIdRef","useRef","accessor","Cell","src","alt","useCallback","fetchId","current","setTimeout","startRow","endRow","slice","Math","ceil","length","Grid","container","marginBottom","item","xs","sm","Typography","variant","marginTop"],"mappings":"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","file":"static/js/49.d4ddc7e4.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles({\r\n    searchcontainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        alignItems:\"center\",\r\n      },\r\n      chip:{\r\n        width:\"80px\",\r\n        textAlign:\"center\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"18px\",\r\n        borderRadius:\"5px\"\r\n      },\r\n      graphic:{\r\n        '& tspan':{\r\nfontSize:\"14px\",\r\nfill: \"#8A8FA7\",\r\nfontFamily: \"Poppins\",\r\nlineHeight: \"44px\",\r\n        },\r\n        '& line':{\r\n         padding: \"20px 0\",\r\n         minHeight: \"40px\",\r\n        },\r\n      },\r\n\r\n})","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\nimport { useTable, usePagination, useSortBy } from \"react-table\";\r\n\r\nexport default function Table({\r\n  columns,\r\n  data,\r\n  fetchData,\r\n  pageCount: controlledPageCount,\r\n}) {\r\n  const history = useHistory();\r\n  const classess = useStyles();\r\n  const {\r\n    getTableProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    gotoPage,\r\n    nextPage,\r\n    pageCount,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0 },\r\n      manualPagination: true,\r\n      pageCount: controlledPageCount,\r\n    },\r\n    usePagination,\r\n\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchData({ pageIndex, pageSize });\r\n  }, [fetchData, pageIndex, pageSize]);\r\n\r\n  const renderPageButton = () => {\r\n    let buttons = [];\r\n    for (let i = 0; i < pageCount; i++) {\r\n      buttons.push(\r\n        <button\r\n          className=\"pagination-button\"\r\n          onClick={() => gotoPage(i)}\r\n          style={{ backgroundColor: pageIndex == i ? \"#40ACFB\" : null }}\r\n        >\r\n          {i + 1}\r\n        </button>\r\n      );\r\n    }\r\n    return buttons;\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"main\">\r\n       <div className=\"tableWrap\">\r\n      <table class=\"role-header\" id=\"table-to-xls\" {...getTableProps()}>\r\n        {/* Table Head */}\r\n        {headerGroups.map((headerGroup) => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map((column) => {\r\n              return (\r\n                <th style={{padding: \"10px 30px\" , fontSize: \"22px\" , lineHeight: \"28px\" , fontWeight: \"600\" , fontFamily: \"Poppins\" , textAlign: \"left\"}}\r\n                  className={\r\n                    column.Header === \"Heading\"\r\n                      ? \"borderStart\"\r\n                      : column.Header === \"2017\"\r\n                        ? \"borderEnd\"\r\n                        : \"borderCenter\"\r\n                  }\r\n                 \r\n                  {...column.getHeaderProps()}\r\n                >\r\n                  {column.render(\"Header\")}\r\n                </th>\r\n              );\r\n            })}\r\n          </tr>\r\n        ))}\r\n\r\n\r\n\r\n\r\n        {/* Table Data */}\r\n\r\n        {rows.map((row, i) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map((cell) => {\r\n                return (\r\n                  <td style={{padding: \"10px 30px\" , fontSize: \"22px\" , lineHeight: \"44px\" , fontWeight: \"400\" , fontFamily: \"Poppins\" , textAlign: \"left\"}}\r\n                    onClick={() => history.push()}\r\n\r\n                    className={\r\n                      cell.column.Header === \"Heading\"\r\n                        ? \"borderStart\"\r\n                        : cell.column.Header === \"2017\"\r\n                          ? \"borderEnd\"\r\n                          : \"borderCenter\"\r\n                    }\r\n                    {...cell.getCellProps()}\r\n                  >\r\n                    {cell.render(\"Cell\")}\r\n                  </td>\r\n                );\r\n              })}\r\n            </tr>\r\n          );\r\n        })}\r\n      </table>\r\n      </div>\r\n      {/* for Pagination */}\r\n      <div className=\"pagination\" style={{ justifyContent: \"flex-end\" }}>\r\n        <Select\r\n          className=\"select\"\r\n          labelId=\"demo-controlled-open-select-label\"\r\n          id=\"demo-controlled-open-select\"\r\n          value={pageSize}\r\n          onChange={(e) => {\r\n            setPageSize(Number(e.target.value));\r\n          }}\r\n\r\n        >\r\n          {[5, 10, 20, 30, 40, 50].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              {pageSize}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n        <nav aria-label=\"Page navigation example\">\r\n  <ul className=\"pagination\">\r\n    <li className=\"page-item\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n        <span aria-hidden=\"true\" style={{ position: \"relative\" , top: \"-3px\"}}>&laquo;</span>\r\n    </li>\r\n    {renderPageButton()}\r\n    <li className=\"page-item\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n        <span aria-hidden=\"true\" style={{ position: \"relative\" , top: \"-3px\"}}>&raquo;</span>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nexport default class SmoothLine extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n      \r\n        series: [\r\n            {\r\n          name: 'Turn Over',\r\n          data: [4, 3, 10, 9, 29, 19, 22, 9, 12, 7, 19, 5, 13, 9, 17, 2, 7, 5]\r\n        },\r\n        {\r\n            name: 'Total Assest',\r\n            data: [0, 5, 8, 12 ,18 , 19, 22, 5, 12, 10, 15, 5, 13, 9, 17, 2, 7, 30]\r\n          },\r\n          {\r\n            name: 'Total Liabiliteas',\r\n            data: [2,10, 5, 10 ,15 , 12, 20, 5, 14, 10, 15, 5, 3, 9, 17, 1, 5, 40]\r\n          },\r\n          {\r\n            name: 'Net Worth',\r\n            data: [0, 7, 8, 20 ,18 , 8, 22, 15, 20, 23, 18, 15, 6, 9, 27, 22, 27, 5]\r\n          },\r\n          {\r\n            name: 'Profit Before Tax',\r\n            data: [7, 15, 18, 22 ,18 , 19, 24, 25, 28, 29, 30, 28, 23, 25, 17, 2, 7, 12]\r\n          },\r\n          {\r\n            name: 'EBIDTA',\r\n            data: [-5, 5, 8, 12 ,18 , 19, 22, 24, 26, 28, 30, 32, 33, 37, 25, 40, 38, 30]\r\n          }\r\n    ],\r\n        options: {\r\n          chart: {\r\n            height: 350,\r\n            type: 'line',\r\n          },\r\n          stroke: {\r\n            width: 5,\r\n            curve: 'smooth'\r\n          },\r\n          xaxis: {\r\n            // type: 'datetime',\r\n            categories: ['2000', '2002', '2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011','2012' ,'2013','2013',\"2014\",'2015','2016','2017'],\r\n            tickAmount: 10,\r\n            // labels: {\r\n            //   formatter: function(value, timestamp, opts) {\r\n            //     // return opts.dateFormatter(new Date(timestamp), 'dd MMM YYYY')\r\n            //     return console.log(\"data\",timestamp,opts.dateFormatter(new Date(timestamp), 'dd YYYYY'))\r\n            //   }\r\n            // }\r\n          },\r\n          title: {\r\n            text: 'Forecast',\r\n            align: 'left',\r\n            style: {\r\n              fontSize: \"13px\",\r\n              color: '#666',\r\n              fill: \"red\",\r\n            }\r\n          },\r\n          fill: {\r\n            type: 'gradient',\r\n            gradient: {\r\n              shade: 'dark',\r\n              gradientToColors: [ '#FDD835'],\r\n              shadeIntensity: 1,\r\n              type: 'horizontal',\r\n              opacityFrom: 1,\r\n              opacityTo: 1,\r\n              stops: [0, 100, 100, 100]\r\n            },\r\n          },\r\n          yaxis: {\r\n             min: -10,\r\n            max: 40\r\n           \r\n          }\r\n        },\r\n      \r\n      \r\n      };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div style={{border:\"1px solid #DCD9D9\", borderRadius:\"10px\" , background: \"#fff\" , padding: \"20px 10px\"}}>  \r\n<Chart options={this.state.options} series={this.state.series} type=\"line\" height={350} />\r\n</div>\r\n        );\r\n      }\r\n    }\r\n\r\n//     render() {\r\n//       return (\r\n        \r\n\r\n//   <div id=\"chart\">\r\n// <ReactApexChart options={this.state.options} series={this.state.series} type=\"line\" height={350} />\r\n// </div>\r\n","import React from 'react'\r\nimport { useStyles } from \"./styles\";\r\nimport { Grid, Typography, Button, InputAdornment, TextField, IconButton } from \"@material-ui/core\";\r\nimport Table from \"./Table\";\r\nimport SmoothLine from './chart';\r\n\r\nconst IndustryWise = () => {\r\n    const classess = useStyles();\r\n    const data = React.useMemo(\r\n        () => [\r\n            {\r\n                heading: \"Europian Enterprise\",\r\n                year1:\"455\",\r\n                year2:\"25\",\r\n                year3:\"18\",\r\n                year4:\"15\",\r\n            },\r\n            {\r\n                heading: \"Europian Enterprise\",\r\n                year1:\"455\",\r\n                year2:\"25\",\r\n                year3:\"18\",\r\n                year4:\"15\",\r\n            },\r\n            {\r\n                heading: \"Europian Enterprise\",\r\n                year1:\"455\",\r\n                year2:\"25\",\r\n                year3:\"18\",\r\n                year4:\"15\",\r\n            },\r\n            {\r\n                heading: \"Europian Enterprise\",\r\n                year1:\"455\",\r\n                year2:\"25\",\r\n                year3:\"18\",\r\n                year4:\"15\",\r\n            },\r\n\r\n        ],\r\n        []\r\n    );\r\n    const [tabledata, settableData] = React.useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageCount, setPageCount] = React.useState(0);\r\n    const compSumfetchIdRef = React.useRef(0);\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: \"Heading\",\r\n                accessor: \"heading\",\r\n            },\r\n            {\r\n                Header: \"2021\",\r\n                accessor: \"year1\",\r\n                Cell:({value})=>{\r\n                    return  <div>\r\n                      <img src={\"/images/upIcon.png\"} alt=\"upGraph\" />{\" \"}{value}\r\n                      </div>\r\n                  }\r\n            },\r\n            {\r\n                Header: \"2019\",\r\n                accessor: \"year2\",\r\n                Cell:({value})=>{\r\n                    return  <div>\r\n                      <img src={\"/images/arrowIcon.png\"} alt=\"upGraph\" />{\" \"}{value}\r\n                      </div>\r\n                  }\r\n           \r\n            },\r\n            {\r\n                Header: \"2018\",\r\n                accessor: \"year3\",\r\n                Cell:({value})=>{\r\n                    return  <div>\r\n                      <img src={\"/images/downIcon.png\"} alt=\"upGraph\" />{\" \"}{value}\r\n                      </div>\r\n                  }\r\n            },\r\n            {\r\n                Header: \"2017\",\r\n                accessor: \"year4\",\r\n                Cell:({value})=>{\r\n                    return  <div>\r\n                      <img src={\"/images/downIcon.png\"} alt=\"upGraph\" />{\" \"}{value}\r\n                      </div>\r\n                  }\r\n            },\r\n         \r\n        ],\r\n        []\r\n    );\r\n\r\n    const fetchData = React.useCallback(({ pageSize, pageIndex }) => {\r\n        const fetchId = ++compSumfetchIdRef.current;\r\n        setLoading(true);\r\n\r\n        setTimeout(() => {\r\n            if (fetchId === compSumfetchIdRef.current) {\r\n                const startRow = pageSize * pageIndex;\r\n                const endRow = startRow + pageSize;\r\n                settableData(data.slice(startRow, endRow));\r\n                setPageCount(Math.ceil(data.length / pageSize));\r\n                setLoading(false);\r\n            }\r\n        }, 1000);\r\n    }, []);\r\n    return (\r\n\r\n        <>\r\n            <div>\r\n\r\n                <Grid container style={{ marginBottom: \"10px\" }} >\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Typography variant=\"h5\" style={{ fontWeight: 600 , fontFamily: \"Poppins\" , fontSize: \"26px\" , lineHeight: \"39px\" , color: \"#000000\" }}>Industry Wise Analysis</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Table\r\n                    columns={columns}\r\n                    data={tabledata}\r\n                    fetchData={fetchData}\r\n                    loading={loading}\r\n                    pageCount={pageCount}\r\n                />\r\n                <Grid style={{marginTop:\"20px\"}} className={classess.graphic}>\r\n                <SmoothLine/>\r\n                </Grid>\r\n            \r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\nexport default IndustryWise;"],"sourceRoot":""}