{"version":3,"sources":["components/companySubPages/Commantry/styles.js","components/companySubPages/Commantry/Table.jsx","components/companySubPages/Commantry/index.jsx"],"names":["useStyles","makeStyles","searchcontainer","display","justifyContent","alignItems","maxWidth","marginTop","exportButton","backgroundColor","fontWeight","marginLeft","fontfamily","fontSize","lineHeight","chip","width","textAlign","borderRadius","companyHeading","fontFamily","color","companyTable","borderCollapse","borderSpacing","whiteSpace","overflowX","background","padding","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","Table","columns","data","fetchData","controlledPageCount","pageCount","history","useHistory","classess","useTable","initialState","pageIndex","manualPagination","useSortBy","usePagination","getTableProps","headerGroups","rows","prepareRow","canPreviousPage","page","canNextPage","gotoPage","pageOptions","nextPage","setPageSize","previousPage","state","pageSize","useEffect","className","class","id","map","headerGroup","getHeaderGroupProps","headers","column","Header","getHeaderProps","getSortByToggleProps","render","style","src","alt","Button","variant","row","i","getRowProps","cells","cell","console","log","onClick","push","getCellProps","Select","labelId","value","onChange","e","Number","target","aria-label","disabled","aria-hidden","position","top","buttons","renderPageButton","Commantry","React","useMemo","commantry","useState","tabledata","settableData","loading","setLoading","setPageCount","compSumfetchIdRef","useRef","accessor","Cell","useCallback","fetchId","current","setTimeout","startRow","endRow","slice","Math","ceil","length","Grid","container","marginBottom","item","xs","sm","Typography","marginRight","size","startIcon","TextField","border","textTransform","placeholder","InputProps","endAdornment","InputAdornment","IconButton"],"mappings":"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","file":"static/js/44.15c2c33e.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles({\r\n    searchcontainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"right\",\r\n        alignItems:\"center\",\r\n        maxWidth: \"100%\",\r\n        marginTop: \"15px\",\r\n      },\r\n      exportButton: {\r\n        backgroundColor: \"#40ACFB\",\r\n        fontWeight: \"600\",\r\n        marginLeft:\"10px\",\r\n        fontfamily: \"Poppins\",\r\n        fontSize: \"22px\",\r\n        lineHeight: \"44px\",\r\n      },\r\n      chip:{\r\n        width:\"80px\",\r\n        textAlign:\"center\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"18px\",\r\n        borderRadius:\"5px\"\r\n      },\r\n      companyHeading:{\r\n        fontFamily: \"Poppins\",\r\n        fontSize: \"26px\",\r\n        lineHeight: \"39px\",\r\n        color: \"#000\",\r\n      },\r\n      companyTable:{\r\n        borderCollapse: \"separate\",\r\n        borderSpacing: \"0 15px\",\r\n        width: \"100%\",\r\n        whiteSpace: \"nowrap\",\r\n        overflowX: \"auto\",\r\n        '& th':{\r\n         background: \"#f1f1f1\",\r\n         padding: \"10px 30px\",\r\n         fontSize: \"22px\",\r\n         lineHeight: \"33px\",\r\n         fontWeight: \"600\",\r\n         fontFamily: \"Poppins\",\r\n        },\r\n        '& th:first-child':{\r\n          borderTopLeftRadius: \"4px\",\r\n          borderBottomLeftRadius: \"4px\",\r\n        },\r\n        '& th:last-child':{\r\n          borderTopRightRadius: \"4px\",\r\n          borderBottomRightRadius: \"4px\",\r\n        },\r\n        '& td':{\r\n          background: \"#ffffff\",\r\n          padding: \"10px 30px\",\r\n          fontSize: \"22px\",\r\n          lineHeight: \"33px\",\r\n          fontWeight: \"400\",\r\n          fontFamily: \"Poppins\",\r\n          color: \"#727272\",\r\n         },\r\n         '& td:first-child':{\r\n           borderTopLeftRadius: \"4px\",\r\n           borderBottomLeftRadius: \"4px\",\r\n         },\r\n         '& td:last-child':{\r\n           borderTopRightRadius: \"4px\",\r\n           borderBottomRightRadius: \"4px\",\r\n         },\r\n      },\r\n\r\n})","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\nimport { useTable, usePagination, useSortBy } from \"react-table\";\r\n\r\nexport default function Table({\r\n  columns,\r\n  data,\r\n  fetchData,\r\n  pageCount: controlledPageCount,\r\n}) {\r\n  const history = useHistory();\r\n  const classess = useStyles();\r\n  const {\r\n    getTableProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    gotoPage,\r\n    nextPage,\r\n    pageCount,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0 },\r\n      manualPagination: true,\r\n      pageCount: controlledPageCount,\r\n    },\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchData({ pageIndex, pageSize });\r\n  }, [fetchData, pageIndex, pageSize]);\r\n\r\n  const renderPageButton = () => {\r\n    let buttons = [];\r\n    for (let i = 0; i < pageCount; i++) {\r\n      buttons.push(\r\n        <button\r\n          className=\"pagination-button\"\r\n          onClick={() => gotoPage(i)}\r\n          style={{ backgroundColor: pageIndex == i ? \"#40ACFB\" : null }}\r\n        >\r\n          {i + 1}\r\n        </button>\r\n      );\r\n    }\r\n    return buttons;\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"tableWrap\">\r\n        <table class=\"role-header\" id=\"table-to-xls\" {...getTableProps()} className={classess.companyTable}>\r\n          {/* Table Head */}\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => {\r\n                return (\r\n                  <th\r\n                    className={\r\n                      column.Header === \"Commantry\"\r\n                        ? \"borderStart\"\r\n                        : column.Header === \"Impact\"\r\n                        ? \"borderEnd\"\r\n                        : \"borderCenter\"\r\n                    }\r\n              \r\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                  >\r\n                    {column.render(\"Header\")}\r\n                    <span style={{marginLeft:\"5px\"}}>\r\n                      <img src={\"/images/Sort.png\"} alt=\"company-note-list\" />\r\n                    </span>\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          ))}\r\n\r\n          <tr>\r\n          <td style={{ background: \"transparent\" }}></td>\r\n         {/* <td style={{ background: \"transparent\" }}></td> */}\r\n         <td style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                  background: \"transparent\",\r\n                  padding: \"0\",\r\n            }}>\r\n              <Button\r\n                className={classess.exportButton}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n              >\r\n                Export\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n\r\n          {/* Table Data */}\r\n\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  console.log(\"cell data\", cell);\r\n                  return (\r\n                    <td\r\n                      onClick={() => history.push()}\r\n                      className={\r\n                        cell.column.Header === \"Commantry\"\r\n                          ? \"borderStart\"\r\n                          : cell.column.Header === \"Impact\"\r\n                          ? \"borderEnd\"\r\n                          : \"borderCenter\"\r\n                      }\r\n                      {...cell.getCellProps()}\r\n                    >\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </table>\r\n      </div>\r\n      {/* for Pagination */}\r\n      <div className=\"pagination\" style={{ justifyContent: \"flex-end\" }}>\r\n        <Select\r\n          className=\"select\"\r\n          labelId=\"demo-controlled-open-select-label\"\r\n          id=\"demo-controlled-open-select\"\r\n          value={pageSize}\r\n          onChange={(e) => {\r\n            setPageSize(Number(e.target.value));\r\n          }}\r\n        >\r\n          {[5, 10, 20, 30, 40, 50].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              {pageSize}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n        <nav aria-label=\"Page navigation example\">\r\n  <ul className=\"pagination\">\r\n    <li className=\"page-item\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n        <span aria-hidden=\"true\" style={{ position: \"relative\" , top: \"-3px\"}}>&laquo;</span>\r\n    </li>\r\n    {renderPageButton()}\r\n    <li className=\"page-item\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n        <span aria-hidden=\"true\" style={{ position: \"relative\" , top: \"-3px\"}}>&raquo;</span>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { useStyles } from \"./styles\";\r\nimport { Grid, Typography, Button, InputAdornment, TextField, IconButton } from \"@material-ui/core\";\r\nimport Table from \"./Table\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst Commantry = () => {\r\n    const classess = useStyles();\r\n    const data = React.useMemo(\r\n        () => [\r\n            {\r\n                commantry:\"The companys trade creditors shows a low amount of outstanding short term creditor obligations\",\r\n            },\r\n            {\r\n                commantry:\"The companys trade creditors shows a low amount of outstanding short term creditor obligations\", \r\n            },\r\n        ],\r\n        []\r\n    );\r\n    const [tabledata, settableData] = React.useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageCount, setPageCount] = React.useState(0);\r\n    const compSumfetchIdRef = React.useRef(0);\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: \"Commantry\",\r\n                accessor: \"commantry\",\r\n            },\r\n            {\r\n                Header: \"Impact\",\r\n                accessor: \"impact\",\r\n                Cell:({value})=>{\r\n                    return  <div>\r\n                      <img src={\"/images/Upload.png\"} alt=\"upGraph\" />\r\n                      </div>\r\n                  }\r\n            },\r\n          \r\n        ],\r\n        []\r\n    );\r\n\r\n    const fetchData = React.useCallback(({ pageSize, pageIndex }) => {\r\n        const fetchId = ++compSumfetchIdRef.current;\r\n        setLoading(true);\r\n\r\n        setTimeout(() => {\r\n            if (fetchId === compSumfetchIdRef.current) {\r\n                const startRow = pageSize * pageIndex;\r\n                const endRow = startRow + pageSize;\r\n                settableData(data.slice(startRow, endRow));\r\n                setPageCount(Math.ceil(data.length / pageSize));\r\n                setLoading(false);\r\n            }\r\n        }, 1000);\r\n    }, []);\r\n    return (\r\n\r\n        <>\r\n            <div>\r\n\r\n                <Grid container style={{ marginBottom: \"10px\" , display: \"block\" }} >\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Typography variant=\"h5\" style={{ fontWeight: 600 }} className={classess.companyHeading}>Commentry</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} className={classess.searchcontainer}>\r\n                        <Button\r\n                            className={classess.Button}\r\n                            style={{background: \"#FFFFFF\", color: \"#000000\", marginRight: \"10px\" , fontFamily: \"Poppins\" , padding: \"0px 10px\" , fontWeight: \"600\" , fontSize: \"26px\" , lineHeight: \"39px\" , color: \"#000000\"}}\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            startIcon={<img src={\"/images/Filter.png\"} alt=\"company-note-list\" />}\r\n                        >\r\n                            Filter\r\n                        </Button>\r\n                        <TextField style={{ background: \"#FFFFFF\", border: \"1px solid #DCD9D9\", textTransform: \"capitalize\", borderRadius: \"6px\" }}\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            placeholder=\"Search\"\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment>\r\n                                        <IconButton>\r\n                                            <SearchIcon />\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                )\r\n                            }} />\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Table\r\n                    columns={columns}\r\n                    data={tabledata}\r\n                    fetchData={fetchData}\r\n                    loading={loading}\r\n                    pageCount={pageCount}\r\n                />\r\n\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\nexport default Commantry;"],"sourceRoot":""}