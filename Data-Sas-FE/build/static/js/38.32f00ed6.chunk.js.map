{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","components/companySubPages/People/styles.js","components/companySubPages/People/Table.jsx","components/common/PeopleCard.jsx","components/companySubPages/People/index.jsx"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","useStyles","makeStyles","searchcontainer","display","justifyContent","alignItems","actioncontainer","chip","width","textAlign","fontWeight","fontSize","borderRadius","peopleCard","marginTop","flexWrap","griddata","fontFamily","lineHeight","color","griddatapara","noEmply","background","Table","columns","data","loading","fetchData","controlledPageCount","pageCount","history","useHistory","useTable","initialState","pageIndex","manualPagination","usePagination","getTableProps","headerGroups","rows","prepareRow","canPreviousPage","page","canNextPage","gotoPage","pageOptions","nextPage","setPageSize","previousPage","state","pageSize","useEffect","class","id","map","headerGroup","getHeaderGroupProps","headers","column","style","padding","Header","getHeaderProps","render","row","i","getRowProps","cells","cell","onClick","push","getCellProps","Select","labelId","value","onChange","e","Number","target","aria-label","disabled","aria-hidden","position","top","buttons","console","log","backgroundColor","renderPageButton","comImage","height","marginRight","PeopleCard","count","message","imgsrc","classess","variant","Grid","Avatar","src","alt","paddingLeft","Typography","People","useState","companyDetail","useSelector","watch","officersCount","fetchTableData","getData","setData","tabledata","settableData","setLoading","setPageCount","compSumfetchIdRef","useRef","useMemo","accessor","officers","length","useCallback","fetchId","current","setTimeout","startRow","endRow","slice","Math","ceil","container","item","xs","sm","Button","boxShadow","size","startIcon","TextField","border","textTransform","placeholder","InputProps","endAdornment","InputAdornment","IconButton"],"mappings":"uGAAA,uDAaIA,EAAoBC,cAAiB,SAAcC,EAAOC,GAC5D,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAgBJ,EAAMK,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAQC,YAAyBP,EAAO,CAAC,UAAW,YAAa,WAErE,OAAoBD,gBAAoBS,IAAOC,YAAS,CACtDN,UAAWO,YAAKR,EAAQS,KAAMR,GAC9BS,UAAWP,EAAS,EAAI,EACxBJ,IAAKA,GACJK,OA6BUO,gBA9CK,CAElBF,KAAM,CACJG,SAAU,WA2CoB,CAChCC,KAAM,WADOF,CAEZf,I,6ECrDUkB,EAAYC,YAAW,CAChCC,gBAAiB,CACbC,QAAS,OACTC,eAAgB,WAChBC,WAAY,UAEhBC,gBAAiB,CACbH,QAAS,OACTC,eAAgB,aAChBC,WAAY,UAEhBE,KAAM,CACFC,MAAO,OACPC,UAAW,SACXC,WAAY,OACZC,SAAU,OACVC,aAAc,OAGlBC,WAAY,CACRC,UAAW,GACXC,SAAU,SAEdC,SAAU,CACNN,WAAY,MACZC,SAAU,OACVM,WAAY,UACZC,WAAY,OACZC,MAAO,WAEXC,aAAc,CACVD,MAAO,UACPR,SAAU,OACVM,WAAY,UACZC,WAAY,OACZR,WAAY,OAEhBW,QAAQ,CACJ,aAAa,CACTC,WAAY,U,yFCnCT,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,QACAC,EAIC,EAJDA,KACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,UACWC,EACV,EADDC,UAEMC,EAAUC,cAEhB,GADiB/B,IAgBbgC,mBACF,CACER,UACAC,OACAQ,aAAc,CAAEC,UAAW,GAC3BC,kBAAkB,EAClBN,UAAWD,GAEbQ,kBAtBAC,EADF,EACEA,cACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,KACAC,EAJF,EAIEA,WAEAC,GANF,EAKEC,KALF,EAMED,iBACAE,EAPF,EAOEA,YAEAC,GATF,EAQEC,YARF,EASED,UAEAf,GAXF,EAUEiB,SAVF,EAWEjB,WAEAkB,GAbF,EAYEC,aAZF,EAaED,aAbF,IAcEE,MAASf,EAdX,EAcWA,UAAWgB,EAdtB,EAcsBA,SAYtBC,qBAAU,WACRxB,EAAU,CAAEO,YAAWgB,eACtB,CAACvB,EAAWO,EAAWgB,IAkB1B,OACE,sBAAK/D,UAAU,OAAf,UACE,qBAAKA,UAAU,YAAf,SACE,gDAAOiE,MAAM,cAAcC,GAAG,gBAAmBhB,KAAjD,cAEGC,EAAagB,KAAI,SAACC,GAAD,OAChB,8CAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQH,KAAI,SAACI,GACxB,OACE,4CACEC,MAAO,CACLC,QAAS,YACTjD,SAAU,OACVO,WAAY,OACZR,WAAY,MACZO,WAAY,UACZR,UAAW,QAEbtB,UACoB,SAAlBuE,EAAOG,OACH,cACkB,SAAlBH,EAAOG,OACP,YACA,gBAEFH,EAAOI,kBAhBb,aAkBGJ,EAAOK,OAAO,sBAOxBrC,GAAW,+CACZA,GACAa,EAAKe,KAAI,SAACU,EAAKC,GAEb,OADAzB,EAAWwB,GAET,8CAAQA,EAAIE,eAAZ,aACGF,EAAIG,MAAMb,KAAI,SAACc,GACd,OACE,4CACET,MAAO,CACLC,QAAS,YACTjD,SAAU,OACVO,WAAY,OACZR,WAAY,MACZO,WAAY,UACZR,UAAW,QAEb4D,QAAS,kBAAMvC,EAAQwC,QACvBnF,UACyB,SAAvBiF,EAAKV,OAAOG,OACR,cACuB,SAAvBO,EAAKV,OAAOG,OACZ,YACA,gBAEFO,EAAKG,gBAjBX,aAmBGH,EAAKL,OAAO,0BAU7B,sBAAK5E,UAAU,aAAawE,MAAO,CAAEvD,eAAgB,YAArD,UACE,cAACoE,EAAA,EAAD,CACErF,UAAU,SACVsF,QAAQ,oCACRpB,GAAG,8BACHqB,MAAOxB,EACPyB,SAAU,SAACC,GACT7B,EAAY8B,OAAOD,EAAEE,OAAOJ,SANhC,SASG,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAIpB,KAAI,SAACJ,GAAD,OAC3B,wBAAuBwB,MAAOxB,EAA9B,SACGA,GADUA,QAKjB,qBAAK6B,aAAW,0BAAhB,SACE,qBAAI5F,UAAU,aAAd,UACE,oBACEA,UAAU,YACVkF,QAAS,kBAAMzB,EAAS,IACxBoC,UAAWvC,EAHb,SAKE,sBACEwC,cAAY,OACZtB,MAAO,CAAEuB,SAAU,WAAYC,IAAK,QAFtC,oBA9Ga,WAEvB,IADA,IAAIC,EAAU,GADe,WAEpBnB,GACPmB,EAAQd,KACN,wBACEnF,UAAU,oBACVkF,QAAS,WAAOzB,EAASqB,GAAIoB,QAAQC,IAAI,kBAAkBrB,IAC3DN,MAAO,CAAE4B,gBAAiBrD,GAAa+B,EAAI,UAAY,MAHzD,SAKGA,EAAI,MAPFA,EAAI,EAAGA,EAAIpC,EAAWoC,IAAM,EAA5BA,GAWT,OAAOmB,EAwGEI,GACD,oBACErG,UAAU,YACVkF,QAAS,kBAAMzB,EAASf,EAAY,IACpCmD,UAAWrC,EAHb,SAKE,sBACEsC,cAAY,OACZtB,MAAO,CAAEuB,SAAU,WAAYC,IAAK,QAFtC,+B,+BCnKDnF,EAAYC,YAAW,CAChCe,SAAU,CACNN,WAAY,MACZC,SAAU,OACVM,WAAY,UACZC,WAAY,OACZC,MAAO,WAEXC,aAAc,CACVD,MAAO,UACPR,SAAU,OACVM,WAAY,UACZC,WAAY,OACZR,WAAY,OAEhB+E,SAAS,CACLjF,MAAO,OACPkF,OAAQ,OACRpE,WAAY,UACZJ,WAAY,OACZN,aAAc,OACdH,UAAW,SACXkF,YAAa,OAEjBtE,QAAQ,CACJ,aAAa,CACTC,WAAY,UAKT,SAASsE,EAAT,GAAiD,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OAC3CC,EAAWhG,IACjB,OACI,cAAClB,EAAA,EAAD,CAAM6E,MAAO,CAAGgC,YAAa,QAAUM,QAAQ,WAA/C,SAEI,uBAAMtC,MAAO,CAAExD,QAAS,OAAQyD,QAAS,OAAQxD,eAAgB,gBAAjE,UACC,cAAC8F,EAAA,EAAD,CAAM/G,UAAW6G,EAASP,SAA1B,SACG,qBAAKtG,UAAW6G,EAASG,OAAQC,IAAKL,EAAQM,IAAI,wBAElD,uBAAM1C,MAAO,CAAExD,QAAS,cAAemG,YAAa,OAApD,UACI,cAACC,EAAA,EAAD,CAAYpG,QAAQ,SAAShB,UAAW6G,EAAShF,SAAUiF,QAAQ,KAAnE,SACKJ,IAEL,cAACU,EAAA,EAAD,CAAYpG,QAAQ,SAAS8F,QAAQ,KAAK9G,UAAW6G,EAAS5E,aAA9D,SACK0E,Y,YC+GVU,UAnJA,WACb,IAAMR,EAAWhG,IACjB,EAA8ByG,oBAAS,GAAvC,mBACQC,GADR,UAC0BC,aAAY,SAAC1D,GAAD,OAAWA,EAAM2D,SAA/CF,eACR,EAA2BD,mBAAS,CAClCI,cAAe,GACfC,eAAgB,KAFlB,mBAAOC,EAAP,KAAgBC,EAAhB,KAIA,EAAkCjI,IAAM0H,SAAS,IAAjD,mBAAOQ,EAAP,KAAkBC,EAAlB,KACA,EAA8BnI,IAAM0H,UAAS,GAA7C,mBAAO/E,EAAP,KAAgByF,EAAhB,KACA,EAAkCpI,IAAM0H,SAAS,GAAjD,mBAAO5E,EAAP,KAAkBuF,EAAlB,KACMC,EAAoBtI,IAAMuI,OAAO,GACjC9F,EAAUzC,IAAMwI,SACpB,iBAAM,CACJ,CACE1D,OAAQ,OACR2D,SAAU,YAEZ,CACE3D,OAAQ,UACR2D,SAAU,QAEZ,CACE3D,OAAQ,QACR2D,SAAU,SAEZ,CACE3D,OAAQ,OACR2D,SAAU,mBAGd,IAGFrE,qBAAU,WACR6D,EAAQ,CACNH,cACEH,EAAce,UAAYf,EAAce,SAASC,OAC7ChB,EAAce,SAASC,OACvB,EACNZ,eAAgBJ,EAAce,aAE/B,IAEH,IAAM9F,EAAY5C,IAAM4I,aACtB,YAA8B,IAA3BzE,EAA0B,EAA1BA,SAAUhB,EAAgB,EAAhBA,UAEL0F,IAAYP,EAAkBQ,QACpCV,GAAW,GACXW,YAAW,WACT,GAAIF,IAAYP,EAAkBQ,QAAS,CACzC,IAAME,EAAW7E,EAAWhB,EACtB8F,EAASD,EAAW7E,EAC1BgE,EAAaH,EAAQD,eAAemB,MAAMF,EAAUC,IACpDZ,EAAac,KAAKC,KAAKpB,EAAQD,eAAeY,OAASxE,IACvDiE,GAAW,MAEZ,OAEL,CAACJ,EAAQD,iBAEX,OACE,mCACE,gCACE,cAACP,EAAA,EAAD,CACEN,QAAQ,KACRtC,MAAO,CACLjD,WAAY,IACZO,WAAY,UACZN,SAAU,OACVO,WAAY,OACZC,MAAO,QAPX,oBAaA,eAAC+E,EAAA,EAAD,CAAMkC,WAAS,EAACjJ,UAAW6G,EAASnF,WAApC,UACE,cAACqF,EAAA,EAAD,CAAMmC,MAAI,EAAV,SACE,cAAC,EAAD,CACExC,MAAOkB,GAAWA,EAAQF,cAAcE,EAAQF,cAAc,EAC9Df,QAAQ,iBACRC,OAAO,yBAGX,cAACG,EAAA,EAAD,CAAMmC,MAAI,EAAClJ,UAAW6G,EAAS3E,QAA/B,SACE,cAAC,EAAD,CACEwE,MAAM,IACNC,QAAQ,iBACRC,OAAO,0BAGX,eAACG,EAAA,EAAD,CAAMmC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGpJ,UAAW6G,EAAS9F,gBAA9C,UACE,cAACsI,EAAA,EAAD,CACErJ,UAAW6G,EAASwC,OACpB7E,MAAO,CACLrC,WAAY,cACZmH,UAAW,OACXtH,MAAO,UACPwE,YAAa,QAEfM,QAAQ,YACRyC,KAAK,QACLC,UACE,qBAAKvC,IAAK,qBAAsBC,IAAI,sBAXxC,oBAgBA,cAACuC,EAAA,EAAD,CACEjF,MAAO,CACLrC,WAAY,UACZuH,OAAQ,oBACRC,cAAe,aACflI,aAAc,OAEhBqF,QAAQ,WACRyC,KAAK,QACLK,YAAY,SACZC,WAAY,CACVC,aACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,iBAQbpC,EAAQD,eAAeY,OAAS,EAC/B,cAACnG,EAAD,CACEC,QAASA,EACTC,KAAMwF,EACNtF,UAAWA,EACXD,QAASA,EACTG,UAAWA,IAGb,cAAC0E,EAAA,EAAD,CAAYN,QAAQ,KAApB","file":"static/js/38.32f00ed6.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles({\r\n    searchcontainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        alignItems: \"center\",\r\n    },\r\n    actioncontainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"center\",\r\n    },\r\n    chip: {\r\n        width: \"80px\",\r\n        textAlign: \"center\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"18px\",\r\n        borderRadius: \"5px\"\r\n    },\r\n  \r\n    peopleCard: {\r\n        marginTop: 15,\r\n        flexWrap: \"unset\",\r\n    },\r\n    griddata: {\r\n        fontWeight: \"600\",\r\n        fontSize: \"40px\",\r\n        fontFamily: \"Poppins\",\r\n        lineHeight: \"66px\",\r\n        color: \"#23273A\",\r\n    },\r\n    griddatapara: {\r\n        color: \"#727272\",\r\n        fontSize: \"19px\",\r\n        fontFamily: \"Poppins\",\r\n        lineHeight: \"28px\",\r\n        fontWeight: \"500\",\r\n    },\r\n    noEmply:{\r\n        '& comImage':{\r\n            background: \"red\",\r\n        },\r\n     },\r\n})","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Select } from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\nimport { useTable, usePagination, useSortBy } from \"react-table\";\r\n\r\nexport default function Table({\r\n  columns,\r\n  data,\r\n  loading,\r\n  fetchData,\r\n  pageCount: controlledPageCount,\r\n}) {\r\n  const history = useHistory();\r\n  const classess = useStyles();\r\n  const {\r\n    getTableProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    gotoPage,\r\n    nextPage,\r\n    pageCount,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0 },\r\n      manualPagination: true,\r\n      pageCount: controlledPageCount,\r\n    },\r\n    usePagination\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchData({ pageIndex, pageSize });\r\n  }, [fetchData, pageIndex, pageSize]);\r\n\r\n  const renderPageButton = () => {\r\n    let buttons = [];\r\n    for (let i = 0; i < pageCount; i++) {\r\n      buttons.push(\r\n        <button\r\n          className=\"pagination-button\"\r\n          onClick={() => {gotoPage(i); console.log(\"ccccccccccccccc\",i)}}\r\n          style={{ backgroundColor: pageIndex == i ? \"#40ACFB\" : null }}\r\n        >\r\n          {i + 1}\r\n        </button>\r\n      );\r\n    }\r\n    return buttons;\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"tableWrap\">\r\n        <table class=\"role-header\" id=\"table-to-xls\" {...getTableProps()}>\r\n          {/* Table Head */}\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => {\r\n                return (\r\n                  <th\r\n                    style={{\r\n                      padding: \"10px 30px\",\r\n                      fontSize: \"22px\",\r\n                      lineHeight: \"33px\",\r\n                      fontWeight: \"600\",\r\n                      fontFamily: \"Poppins\",\r\n                      textAlign: \"left\",\r\n                    }}\r\n                    className={\r\n                      column.Header === \"Name\"\r\n                        ? \"borderStart\"\r\n                        : column.Header === \"Role\"\r\n                        ? \"borderEnd\"\r\n                        : \"borderCenter\"\r\n                    }\r\n                    {...column.getHeaderProps()}\r\n                  >\r\n                    {column.render(\"Header\")}\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          ))}\r\n          {/* Table Data */}\r\n          {loading && <div>Loading ...</div>}\r\n        {!loading &&\r\n          rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td\r\n                      style={{\r\n                        padding: \"10px 30px\",\r\n                        fontSize: \"22px\",\r\n                        lineHeight: \"33px\",\r\n                        fontWeight: \"400\",\r\n                        fontFamily: \"Poppins\",\r\n                        textAlign: \"left\",\r\n                      }}\r\n                      onClick={() => history.push()}\r\n                      className={\r\n                        cell.column.Header === \"Name\"\r\n                          ? \"borderStart\"\r\n                          : cell.column.Header === \"Role\"\r\n                          ? \"borderEnd\"\r\n                          : \"borderCenter\"\r\n                      }\r\n                      {...cell.getCellProps()}\r\n                    >\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </table>\r\n      </div>\r\n      {/* for Pagination */}\r\n      <div className=\"pagination\" style={{ justifyContent: \"flex-end\" }}>\r\n        <Select\r\n          className=\"select\"\r\n          labelId=\"demo-controlled-open-select-label\"\r\n          id=\"demo-controlled-open-select\"\r\n          value={pageSize}\r\n          onChange={(e) => {\r\n            setPageSize(Number(e.target.value));\r\n          }}\r\n        >\r\n          {[5, 10, 20, 30, 40, 50].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              {pageSize}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n        <nav aria-label=\"Page navigation example\">\r\n          <ul className=\"pagination\">\r\n            <li\r\n              className=\"page-item\"\r\n              onClick={() => gotoPage(0)}\r\n              disabled={!canPreviousPage}\r\n            >\r\n              <span\r\n                aria-hidden=\"true\"\r\n                style={{ position: \"relative\", top: \"-3px\" }}\r\n              >\r\n                &laquo;\r\n              </span>\r\n            </li>\r\n            {renderPageButton()}\r\n            <li\r\n              className=\"page-item\"\r\n              onClick={() => gotoPage(pageCount - 1)}\r\n              disabled={!canNextPage}\r\n            >\r\n              <span\r\n                aria-hidden=\"true\"\r\n                style={{ position: \"relative\", top: \"-3px\" }}\r\n              >\r\n                &raquo;\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Grid, Typography, Card } from \"@material-ui/core\";\r\nimport { grid } from '@mui/system';\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles({\r\n    griddata: {\r\n        fontWeight: \"600\",\r\n        fontSize: \"40px\",\r\n        fontFamily: \"Poppins\",\r\n        lineHeight: \"66px\",\r\n        color: \"#23273A\",\r\n    },\r\n    griddatapara: {\r\n        color: \"#727272\",\r\n        fontSize: \"19px\",\r\n        fontFamily: \"Poppins\",\r\n        lineHeight: \"28px\",\r\n        fontWeight: \"500\",\r\n    },\r\n    comImage:{\r\n        width: \"61px\",\r\n        height: \"61px\",\r\n        background: \"#D9EEFE\",\r\n        lineHeight: \"57px\",\r\n        borderRadius: \"50px\",\r\n        textAlign: \"center\",\r\n        marginRight: \"7px\",\r\n    },\r\n    noEmply:{\r\n        '& comImage':{\r\n            background: \"red\",\r\n        },\r\n     },\r\n})\r\n\r\nexport default function PeopleCard({ count, message, imgsrc }) {\r\n    const classess = useStyles();\r\n    return (\r\n        <Card style={{  marginRight: \"10px\" }} variant=\"outlined\">\r\n\r\n            <grid style={{ display: \"flex\", padding: \"20px\", justifyContent: \"space-around\" }}>\r\n             <Grid className={classess.comImage}>\r\n                <img className={classess.Avatar} src={imgsrc} alt=\"company-note-list\" />\r\n                </Grid>\r\n                <grid style={{ display: \"inline-grid\", paddingLeft: \"5px\" }}>\r\n                    <Typography display=\"inline\" className={classess.griddata} variant=\"h7\">\r\n                        {count}\r\n                    </Typography>\r\n                    <Typography display=\"inline\" variant=\"h7\" className={classess.griddatapara}>\r\n                        {message}\r\n                    </Typography>\r\n                </grid>\r\n            </grid>\r\n        </Card>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  InputAdornment,\r\n  TextField,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport Table from \"./Table\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport PeoplerCard from \"../../common/PeopleCard\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst People = () => {\r\n  const classess = useStyles();\r\n  const [monitor, setMonitor] = useState(false);\r\n  const { companyDetail } = useSelector((state) => state.watch);\r\n  const [getData, setData] = useState({\r\n    officersCount: \"\",\r\n    fetchTableData: \"\",\r\n  });\r\n  const [tabledata, settableData] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const compSumfetchIdRef = React.useRef(0);\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Name\",\r\n        accessor: \"fullname\",\r\n      },\r\n      {\r\n        Header: \"Surname\",\r\n        accessor: \"name\",\r\n      },\r\n      {\r\n        Header: \"Title\",\r\n        accessor: \"title\",\r\n      },\r\n      {\r\n        Header: \"Role\",\r\n        accessor: \"officer_role\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    setData({\r\n      officersCount:\r\n        companyDetail.officers && companyDetail.officers.length\r\n          ? companyDetail.officers.length\r\n          : 0,\r\n      fetchTableData: companyDetail.officers,\r\n    });\r\n  }, []);\r\n\r\n  const fetchData = React.useCallback(\r\n    ({ pageSize, pageIndex }) => {\r\n     //console.log(\"p iii\",  pageIndex )\r\n      const fetchId = ++compSumfetchIdRef.current;\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        if (fetchId === compSumfetchIdRef.current) {\r\n          const startRow = pageSize * pageIndex;\r\n          const endRow = startRow + pageSize;\r\n          settableData(getData.fetchTableData.slice(startRow, endRow));\r\n          setPageCount(Math.ceil(getData.fetchTableData.length / pageSize));\r\n          setLoading(false);\r\n        }\r\n      }, 3000);\r\n    },\r\n    [getData.fetchTableData]\r\n  );\r\n  return (\r\n    <>\r\n      <div>\r\n        <Typography\r\n          variant=\"h5\"\r\n          style={{\r\n            fontWeight: 600,\r\n            fontFamily: \"Poppins\",\r\n            fontSize: \"26px\",\r\n            lineHeight: \"39px\",\r\n            color: \"#000\",\r\n          }}\r\n        >\r\n          People\r\n        </Typography>\r\n\r\n        <Grid container className={classess.peopleCard}>\r\n          <Grid item>\r\n            <PeoplerCard\r\n              count={getData && getData.officersCount?getData.officersCount:0 }\r\n              message=\"No of Director\"\r\n              imgsrc=\"/images/DWIcon.png\"\r\n            />\r\n          </Grid>\r\n          <Grid item className={classess.noEmply}>\r\n            <PeoplerCard\r\n              count=\"0\"\r\n              message=\"No of Employee\"\r\n              imgsrc=\"/images/DouIcon.png\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} className={classess.searchcontainer}>\r\n            <Button\r\n              className={classess.Button}\r\n              style={{\r\n                background: \"transparent\",\r\n                boxShadow: \"none\",\r\n                color: \"#000000\",\r\n                marginRight: \"10px\",\r\n              }}\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              startIcon={\r\n                <img src={\"/images/Filter.png\"} alt=\"company-note-list\" />\r\n              }\r\n            >\r\n              Filter\r\n            </Button>\r\n            <TextField\r\n              style={{\r\n                background: \"#FFFFFF\",\r\n                border: \"1px solid #DCD9D9\",\r\n                textTransform: \"capitalize\",\r\n                borderRadius: \"6px\",\r\n              }}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              placeholder=\"Search\"\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment>\r\n                    <IconButton>\r\n                      <SearchIcon />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        {getData.fetchTableData.length > 0 ? (\r\n          <Table\r\n            columns={columns}\r\n            data={tabledata}\r\n            fetchData={fetchData}\r\n            loading={loading}\r\n            pageCount={pageCount}\r\n          />\r\n        ) : (\r\n          <Typography variant=\"h6\"> No results found</Typography>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default People;\r\n"],"sourceRoot":""}