{"version":3,"sources":["pages/Profile/styles.js","pages/Profile/index.jsx"],"names":["useStyles","makeStyles","theme","filterButton","marginTop","marginBottom","backgroundColor","buttonToken","fontSize","fontWeight","width","lable","color","editHeader","extention","display","alignItems","cursor","extText","textDecoration","paper","height","border","borderRadius","profileinput","model","top","left","transform","position","palette","background","boxShadow","shadows","padding","spacing","modelHead","margin","modelPara","modelForm","modelFormItem","modelFormInput","inputItem","inputError","editProfile","minHeight","fontFamily","fontStyle","lineHeight","profileMain","textTransform","Profile","useState","editable","setEditadle","dispatch","useDispatch","showmodel","setshowmodel","Error","setError","uuid","firstName","lastName","email","country","phoneNumber","companyName","address","postalCode","companyNumber","city","county","u_country_code","u_email_option","data","setData","useEffect","userData","JSON","parse","sessionStorage","getItem","u_first_name","u_last_name","u_email","u_country","u_phone_no","u_company_name","u_address","u_postal_code","u_company_no","u_city","classes","className","Container","Grid","container","justify","item","xs","sm","Typography","variant","TextField","disabled","size","error","value","onChange","e","target","style","marginRight","Button","startIcon","Edit","onClick","Save","saveButton","errors","test","req","trim","toString","console","log","updateUser","saveChanges","marginLeft","open","setshowChangePassword"],"mappings":"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","file":"static/js/63.f3531849.chunk.js","sourcesContent":["\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    filterButton: {\r\n        marginTop: \"10px\",\r\n        marginBottom: \"10px\",\r\n        backgroundColor: \"green\"\r\n    },\r\n    buttonToken: {\r\n        fontSize: \"8px\",\r\n        fontWeight: \"bold\",\r\n        width: \"121px\",\r\n    },\r\n    lable: {\r\n        color: \"#727272\",\r\n        fontSize: \"1rem\",\r\n        fontWeight: 500,\r\n        marginBottom: \"5px\"\r\n    },\r\n    editHeader:{\r\n        marginTop: \"10px\",\r\n        marginBottom: \"10px\",\r\n        backgroundColor: \"#efefef\"\r\n    },\r\n    extention:{\r\n        color: \"#40acfb\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        cursor:\"pointer\",\r\n    },\r\n    extText:{\r\n       textDecoration: \"underline\",\r\n    },\r\n    paper: {\r\n        height: 300,\r\n        width: 250,\r\n        border: \"1px solid\",\r\n        borderRadius: \"5px\",\r\n    },\r\n    profileinput: { width: \"90%\" },\r\n    model: {\r\n        top: `50%`,\r\n        left: `50%`,\r\n        transform: `translate(-${50}%, -${50}%)`,\r\n        position: \"absolute\",\r\n        width: 430,\r\n        backgroundColor: theme.palette.background.paper,\r\n        // height: \"500px\",\r\n        borderRadius: \"30px\",\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    modelHead: {\r\n        margin: \" 20px 0\",\r\n        fontWeight: \"bold\",\r\n    },\r\n    modelPara: {\r\n        margin: \"20px 0px\",\r\n        fontSize: \"20px\",\r\n        color: \"#8a8fa7\",\r\n    },\r\n    modelForm: {\r\n        width: \"100%\"\r\n    },\r\n    modelFormItem: {\r\n        width: \"100%\",\r\n        margin: \"10px 0\"\r\n    },\r\n    modelFormInput: {\r\n        width: '100%'\r\n    },\r\n    inputItem: {\r\n        marginTop: \"10px\"\r\n    },\r\n    inputError:{\r\n        color: \"red\",\r\n    },\r\n    editProfile:{\r\n        padding: \"0\",\r\n        '& input':{\r\n            background: \"#fff\",\r\n            borderRadius: \"4px\",\r\n            minHeight: \"25px\",\r\n            border: \"1px solid #DCD9D9\",\r\n            margin: \"0 20px\",\r\n        },\r\n        '& h6':{\r\n            fontFamily: \"Poppins\",\r\n            fontStyle: \"normal\",\r\n            fontWeight: \"normal\",\r\n            fontSize: \"20px\",\r\n            lineHeight: \"44px\",\r\n            color: \"#727272\",\r\n            margin: \"0 20px\",\r\n        },\r\n    },\r\n    profileMain:{\r\n        margin: \"40px 60px 120px\",\r\n    },\r\n    profileinput:{\r\n        width: \"100%\",\r\n    },\r\n    filterButton:{\r\n    background: \"#40ACFB\",\r\n    borderRadius: \"5px\",\r\n    fontFamily: \"Poppins\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"500\",\r\n    fontSize: \"22px\",\r\n    lineHeight: \"44px\",\r\n    color: \"#FFFFFF\",\r\n    textTransform: \"capitalize\",\r\n    },\r\n    saveButton:{\r\n        background: \"#03A339\",\r\n        borderRadius: \"5px\",\r\n        fontFamily: \"Poppins\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: \"500\",\r\n        fontSize: \"22px\",\r\n        lineHeight: \"44px\",\r\n        color: \"#FFFFFF\",\r\n        textTransform: \"capitalize\",\r\n        },\r\n    editHeader:{\r\n        background: \"#EFEFEF\",\r\n        borderRadius: \"5px\",\r\n        fontFamily: \"Poppins\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: \"500\",\r\n        fontSize: \"22px\",\r\n        lineHeight: \"44px\",\r\n        textTransform: \"capitalize\",\r\n        },\r\n}));","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Container,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Edit, Save } from \"@material-ui/icons\";\r\nimport { useStyles } from \"./styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport ChangePassword from \"../../components/common/changePassword\";\r\nimport { updateUser } from \"../../redux/actions/authActions\";\r\nimport ExtensionIcon from \"@mui/icons-material/Extension\";\r\n// import { useParams } from \"react-router-dom\";\r\n// import { getCompanyDetail } from \"../../redux/actions/watchAction\";\r\n\r\nexport default function Profile() {\r\n  // const { ID } = useParams();\r\n  const [editable, setEditadle] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const [showmodel, setshowmodel] = useState(false);\r\n  // const { companyDetail } = useSelector((state)=> state.watch);\r\n  const [Error, setError] = useState({});\r\n  const [data, setData] = useState({\r\n    uuid: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    country: \"\",\r\n    phoneNumber: \"\",\r\n    companyName: \"\",\r\n    address: \"\",\r\n    postalCode: \"\",\r\n    companyNumber: \"\",\r\n    city: \"\",\r\n    county: \"\",\r\n    u_country_code: \"\",\r\n    u_email_option: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    // dispatch(getCompanyDetail(ID));\r\n    //console.log(\"😋😋😋😋😋😋userData😋😋😋😋😋😋\", JSON.parse(sessionStorage.getItem(\"userData\")) );\r\n    let userData = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n    setData({\r\n      uuid: userData.uuid,\r\n      firstName: userData.u_first_name,\r\n      lastName: userData.u_last_name,\r\n      email: userData.u_email,\r\n      country: userData.u_country,\r\n      phoneNumber: userData.u_phone_no,\r\n      companyName: userData.u_company_name,\r\n      address: userData.u_address,\r\n      postalCode: userData.u_postal_code,\r\n      companyNumber: userData.u_company_no,\r\n      city: userData.u_city,\r\n      county: userData.u_country,\r\n      u_country_code: userData.u_country_code,\r\n      u_email_option: userData.u_email_option,\r\n    });\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  const cancelBtn = () => {\r\n    setEditadle(true);\r\n  };\r\n\r\n  const saveChanges = () => {\r\n    setError({});\r\n    let errors = {};\r\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n\r\n    if (!data.email) {\r\n      errors.email = \"Email filed required\";\r\n    } else if (!regex.test(data.email)) {\r\n      errors.email = \"Invalid email format\";\r\n    }\r\n    if (!data.firstName) {\r\n      errors.firstName = \"Name filed required\";\r\n    }\r\n    if (!data.lastName) {\r\n      errors.lastName = \"Last name filed required\";\r\n    }\r\n    if (!data.country) {\r\n      errors.country = \"Country field resquired\";\r\n    }\r\n    if (!data.phoneNumber) {\r\n      errors.phoneNumber = \"Phone number field required\";\r\n    }\r\n    if (!data.companyName) {\r\n      errors.companyName = \"Company name field required\";\r\n    }\r\n    if (!data.companyNumber) {\r\n      errors.companyNumber = \"Company number field required\";\r\n    }\r\n    if (!data.city) {\r\n      errors.city = \"City field required\";\r\n    }\r\n    if (!data.address) {\r\n      errors.address = \"Address field required\";\r\n    }\r\n    if (!data.postalCode) {\r\n      errors.postalCode = \"Postal code field required\";\r\n    }\r\n    if (!data.county) {\r\n      errors.county = \"County field required\";\r\n    }\r\n    let req = {\r\n      uuid: data.uuid,\r\n      u_first_name: data.firstName.trim(),\r\n      u_last_name: data.lastName.trim(),\r\n      u_country_code: data.u_country_code.trim(),\r\n      u_phone_no: data.phoneNumber.toString().trim(),\r\n      u_company_name: data.companyName.trim(),\r\n      u_company_no: data.companyNumber.trim(),\r\n      u_city: data.city.trim(),\r\n      u_email: data.email.trim(),\r\n      u_country: data.country.trim(),\r\n      u_address: data.address.trim(),\r\n      u_postal_code: data.postalCode.toString().trim(),\r\n      u_email_option: data.u_email_option.trim(),\r\n    };\r\n    console.log({ ...req });\r\n    if (\r\n      errors.email ||\r\n      errors.firstName ||\r\n      errors.lastName ||\r\n      errors.country ||\r\n      errors.phoneNumber ||\r\n      errors.companyName ||\r\n      errors.companyNumber ||\r\n      errors.city ||\r\n      errors.address ||\r\n      errors.county ||\r\n      errors.postalCode\r\n    ) {\r\n      setError(errors);\r\n    } else {\r\n      setEditadle(!editable);\r\n      dispatch(updateUser(req));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className={classes.profileMain}>\r\n        {/* <div style={{ backgroundColor: \"#efefef\" }}>\r\n          <Button\r\n            className={classes.editHeader}\r\n            startIcon={<Edit />}\r\n            color=\"#40ACFB\"\r\n            onClick={() => setEditadle(!editable)}>\r\n            Edit Profile\r\n          </Button>\r\n        </div> */}\r\n\r\n        {/* Profile inputs */}\r\n        <Container className={classes.editProfile}>\r\n          <Grid container justify=\"space-around\">\r\n            <Grid item xs={12} sm={6} className={classes.inputItem}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                Name\r\n              </Typography>\r\n              <TextField\r\n                className={classes.profileinput}\r\n                disabled={editable}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                error={Error.firstName ? true : false}\r\n                value={data.firstName}\r\n                onChange={(e) =>\r\n                  setData({ ...data, firstName: e.target.value })\r\n                }\r\n              />\r\n              {Error.firstName && (\r\n                <Typography className={classes.inputError}>\r\n                  {Error.firstName}\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} className={classes.inputItem}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                Last Name\r\n              </Typography>\r\n              <TextField\r\n                className={classes.profileinput}\r\n                disabled={editable}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                error={Error.lastName ? true : false}\r\n                value={data.lastName}\r\n                onChange={(e) => setData({ ...data, lastName: e.target.value })}\r\n              />\r\n              {Error.lastName && (\r\n                <Typography className={classes.inputError}>\r\n                  {Error.lastName}\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} className={classes.inputItem}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                Email Address\r\n              </Typography>\r\n              <TextField\r\n                className={classes.profileinput}\r\n                disabled={editable}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                error={Error.email ? true : false}\r\n                value={data.email}\r\n                onChange={(e) => setData({ ...data, email: e.target.value })}\r\n              />\r\n              {Error.email && (\r\n                <Typography className={classes.inputError}>\r\n                  {Error.email}\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} className={classes.inputItem}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                Country\r\n              </Typography>\r\n              <TextField\r\n                className={classes.profileinput}\r\n                disabled={editable}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                error={Error.country ? true : false}\r\n                value={data.country}\r\n                onChange={(e) => setData({ ...data, country: e.target.value })}\r\n              />\r\n              {Error.country && (\r\n                <Typography className={classes.inputError}>\r\n                  {Error.country}\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} className={classes.inputItem}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                Phone Number\r\n              </Typography>\r\n              <TextField\r\n                className={classes.profileinput}\r\n                disabled={editable}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={Error.phoneNumber ? true : false}\r\n                value={data.phoneNumber}\r\n                onChange={(e) =>\r\n                  setData({ ...data, phoneNumber: e.target.value })\r\n                }\r\n              />\r\n              {Error.phoneNumber && (\r\n                <Typography className={classes.inputError}>\r\n                  {Error.phoneNumber}\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} className={classes.inputItem}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                County\r\n              </Typography>\r\n              <TextField\r\n                className={classes.profileinput}\r\n                disabled={editable}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={Error.county ? true : false}\r\n                value={data.county}\r\n                onChange={(e) => setData({ ...data, county: e.target.value })}\r\n              />\r\n              {Error.county && (\r\n                <Typography className={classes.inputError}>\r\n                  {Error.county}\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} className={classes.inputItem}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                Company Name\r\n              </Typography>\r\n              <TextField\r\n                className={classes.profileinput}\r\n                disabled={editable}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={Error.companyName ? true : false}\r\n                value={data.companyName}\r\n                onChange={(e) =>\r\n                  setData({ ...data, companyName: e.target.value })\r\n                }\r\n              />\r\n              {Error.companyName && (\r\n                <Typography className={classes.inputError}>\r\n                  {Error.companyName}\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} className={classes.inputItem}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                Address\r\n              </Typography>\r\n              <TextField\r\n                className={classes.profileinput}\r\n                disabled={editable}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={Error.address ? true : false}\r\n                value={data.address}\r\n                onChange={(e) => setData({ ...data, address: e.target.value })}\r\n              />\r\n              {Error.address && (\r\n                <Typography className={classes.inputError}>\r\n                  {Error.address}\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} className={classes.inputItem}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                Company Number\r\n              </Typography>\r\n              <TextField\r\n                className={classes.profileinput}\r\n                disabled={editable}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={Error.companyNumber ? true : false}\r\n                value={data.companyNumber}\r\n                onChange={(e) =>\r\n                  setData({ ...data, companyNumber: e.target.value })\r\n                }\r\n              />\r\n              {Error.companyNumber && (\r\n                <Typography className={classes.inputError}>\r\n                  {Error.companyNumber}\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} className={classes.inputItem}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                Postal Code\r\n              </Typography>\r\n              <TextField\r\n                className={classes.profileinput}\r\n                disabled={editable}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={Error.postalCode ? true : false}\r\n                value={data.postalCode}\r\n                onChange={(e) =>\r\n                  setData({ ...data, postalCode: e.target.value })\r\n                }\r\n              />\r\n              {Error.postalCode && (\r\n                <Typography className={classes.inputError}>\r\n                  {Error.postalCode}\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} className={classes.inputItem}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                City\r\n              </Typography>\r\n              <TextField\r\n                className={classes.profileinput}\r\n                disabled={editable}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={Error.city ? true : false}\r\n                value={data.city}\r\n                onChange={(e) => setData({ ...data, city: e.target.value })}\r\n              />\r\n              {Error.city && (\r\n                <Typography className={classes.inputError}>\r\n                  {Error.city}\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} className={classes.inputItem}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                Secondary Email(Option)\r\n              </Typography>\r\n              <TextField\r\n                className={classes.profileinput}\r\n                disabled={editable}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.inputItem}>\r\n            <Grid container>\r\n              <Grid\r\n                item\r\n                className={classes.extention}\r\n                style={{ marginBottom: \"20px\" }}\r\n              >\r\n                <ExtensionIcon style={{ marginRight: \"5px\" }} />{\" \"}\r\n                <p className={classes.extText}>Chrome Extention</p>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              {editable ? (\r\n                <Button\r\n                  className={classes.editHeader}\r\n                  startIcon={<Edit />}\r\n                  color=\"#40ACFB\"\r\n                  onClick={() => setEditadle(!editable)}\r\n                >\r\n                  Edit Profile\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  startIcon={<Save />}\r\n                  className={classes.saveButton}\r\n                  variant=\"contained\"\r\n                  onClick={() => {\r\n                    saveChanges();\r\n                  }}\r\n                >\r\n                  Save\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                className={classes.filterButton}\r\n                style={{ backgroundColor: \"#91979d\", marginLeft: \"10px\" }}\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  cancelBtn();\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                className={classes.filterButton}\r\n                color=\"primary\"\r\n                style={{ backgroundColor: \"#40acfb\", marginLeft: \"20px\" }}\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setshowmodel(true);\r\n                }}\r\n              >\r\n                Change Password\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n        {/* model */}\r\n\r\n        <ChangePassword open={showmodel} setshowChangePassword={setshowmodel} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}