{"version":3,"sources":["components/companySubPages/Overview/Notes/styles.js","components/common/AddNotes.jsx","components/companySubPages/Overview/Notes/index.jsx"],"names":["useStyles","makeStyles","headtext","fontWeight","marginBottom","checkBox","display","alignItems","exportButton","backgroundColor","marginLeft","root","height","image","padding","gridContainer","gridItem","lineHeight","fontSize","header","theme","model","top","left","transform","position","width","palette","background","paper","borderRadius","boxShadow","shadows","modelHead","margin","fontFamily","modelPara","color","modelForm","modelFormItem","inputError","modelFormInput","border","inputItem","marginTop","lable","conformButton","cancelButton","buttonMain","AddNotes","open","setAddNotes","classes","dispatch","useDispatch","companyDetail","useSelector","state","watch","getcompanyNotes","useState","addNotes","data","setData","setError","useHistory","Modal","onClose","aria-labelledby","aria-describedby","className","id","Divider","Grid","container","item","TextField","placeholder","multiline","value","onChange","e","target","rows","maxRows","Button","variant","size","style","onClick","errors","dataToken","JSON","parse","sessionStorage","getItem","console","log","n_text","user_id","company_id","comapany_uuid","uuid","n_company_name","company_name","datas","addCompanyNotes","handleAddNotes","Table","columns","fetchData","loading","controlledPageCount","pageCount","useTable","initialState","pageIndex","manualPagination","usePagination","getTableProps","headerGroups","prepareRow","canPreviousPage","page","canNextPage","gotoPage","pageOptions","nextPage","setPageSize","previousPage","pageSize","useEffect","class","map","headerGroup","getHeaderGroupProps","headers","column","Header","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","justifyContent","Select","labelId","Number","aria-label","disabled","aria-hidden","buttons","push","renderPageButton","BussinessWatch","showmodel","setshowmodel","classess","React","setLoading","setPageCount","businessfetchIdRef","useRef","tabledata","settableData","useMemo","accessor","useCallback","fetchId","current","setTimeout","notes","startRow","endRow","slice","Math","ceil","length","xs","sm","Typography","watchHeading"],"mappings":"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","file":"static/js/51.c049ab77.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles({\r\n\r\n    headtext: {\r\n        fontWeight: \"bold\",\r\n        marginBottom: \"10px\",\r\n      },\r\n      checkBox: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n      },\r\n      exportButton: {\r\n        backgroundColor: \"#40acfb\",\r\n        fontWeight: \"bold\",\r\n        marginLeft:\"10px\"\r\n      },\r\n      root : {\r\n        height:\"40%\"\r\n      },\r\n      image : {\r\n        padding:\"10px\"\r\n      },\r\n      gridContainer: {\r\n        padding:\"30px\"\r\n      },\r\n      gridItem:{\r\n        lineHeight:\" 44px\",\r\n        fontSize:\"20px\",\r\n      },\r\n      header:{\r\n        lineHeight:\"39px\",\r\n        fontSize:\"26px\"\r\n        \r\n      }\r\n})","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Modal,\r\n  Divider,\r\n  Typography,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { addCompanyNotes } from \"../../redux/actions/watchAction\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  model: {\r\n    top: `50%`,\r\n    left: `50%`,\r\n    transform: `translate(-${50}%, -${50}%)`,\r\n    position: \"absolute\",\r\n    width: 430,\r\n    backgroundColor: theme.palette.background.paper,\r\n    // height: \"500px\",\r\n    borderRadius: \"30px\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: \"16px 0 35px\",\r\n  },\r\n  modelHead: {\r\n    margin: \" 20px 0\",\r\n    fontWeight: \"bold\",\r\n    padding: \"0 32px\",\r\n    fontSize: \"36px\",\r\n    lineHeight: \"54px\",\r\n    fontFamily: \"Poppins\",\r\n  },\r\n  modelPara: {\r\n    margin: \"20px 0px\",\r\n    fontSize: \"20px\",\r\n    color: \"#8a8fa7\",\r\n  },\r\n  modelForm: {\r\n    width: \"100%\",\r\n    padding: \"10px 32px\",\r\n  },\r\n  modelFormItem: {\r\n    width: \"100%\",\r\n    margin: \"10px 0\",\r\n  },\r\n  inputError: {\r\n    color: \"red\",\r\n  },\r\n  modelFormInput: {\r\n    width: \"100%\",\r\n    border: \"1px solid #DCD9D9\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  inputItem: {\r\n    marginTop: \"10px\",\r\n  },\r\n  lable: {\r\n    color: \"#727272\",\r\n    fontWeight: 400,\r\n    marginBottom: \"5px\",\r\n    fontFamily: \"Poppins\",\r\n    fontSize: \"20px\",\r\n    lineHeight: \"44px\",\r\n  },\r\n  conformButton: {\r\n    background: \"#40ACFB\",\r\n    borderRadius: \"5px\",\r\n    fontFamily: \"Poppins\",\r\n    fontSize: \"22px\",\r\n    lineHeight: \"44px\",\r\n    fontWeight: \"500\",\r\n  },\r\n  cancelButton: {\r\n    background: \"#6C757D\",\r\n    borderRadius: \"5px\",\r\n    fontFamily: \"Poppins\",\r\n    fontSize: \"22px\",\r\n    lineHeight: \"44px\",\r\n    fontWeight: \"500\",\r\n  },\r\n  buttonMain: {\r\n    padding: \"0 0 0 32px\",\r\n  },\r\n}));\r\n\r\nexport default function AddNotes({ open, setAddNotes }) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { getcompanyNotes } = useSelector((state) => state.watch);\r\n  const { companyDetail } = useSelector((state) => state.watch);\r\n  const [data, setData] = useState({\r\n    addNotes: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState({});\r\n  const [showPassword, setshowPassword] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleAddNotes = () => {\r\n    setError({});\r\n    let errors = {};\r\n    let dataToken = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n   // console.log(companyDetail.company_name,\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\", companyDetail);\r\n    if (!data.addNotes) {\r\n      errors.addNotes = \"Notes can not be blank\";\r\n    }\r\n\r\n    if (errors.addNotes) {\r\n      setError(errors);\r\n    } else {\r\n      console.log(\"=@=@=@=@=@=@=@=@=@=@=@=\", {\r\n        n_text: data.addNotes,\r\n        user_id: dataToken.id,\r\n        company_id: companyDetail.id,\r\n        comapany_uuid: companyDetail.uuid,\r\n        n_company_name: companyDetail.company_name\r\n      }\r\n      );\r\n      let datas = {\r\n        n_company_name: companyDetail.company_name,\r\n        n_text: data.addNotes,\r\n        user_id: dataToken.id,\r\n        company_id: companyDetail.id,\r\n        comapany_uuid: companyDetail.uuid\r\n      }\r\n      dispatch(\r\n        addCompanyNotes(\r\n          datas\r\n        )\r\n      );\r\n      setAddNotes(false);\r\n      setData({\r\n        addNotes: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCancle = () => {\r\n    setAddNotes(false);\r\n    setData({\r\n      addNotes: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={() => setAddNotes(false)}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div className={classes.model}>\r\n        <h2 id=\"simple-modal-title\" className={classes.modelHead}>\r\n          Add Notes\r\n        </h2>\r\n        <Divider />\r\n        {/* Model fields */}\r\n        <Grid container className={classes.modelForm}>\r\n          <Grid item className={classes.modelFormItem}>\r\n            <TextField\r\n              placeholder=\"Add Note\"\r\n              multiline\r\n              value={data.addNotes}\r\n              onChange={(e) => setData({ ...data, addNotes: e.target.value })}\r\n              rows={4}\r\n              maxRows={12}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container>\r\n          <Grid item className={classes.buttonMain}>\r\n            <Button\r\n              className={classes.conformButton}\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              style={{ marginTop: \"10px\" }}\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                handleAddNotes();\r\n              }}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              className={classes.cancelButton}\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              style={{\r\n                marginTop: \"10px\",\r\n                backgroundColor: \"#91979d\",\r\n                marginLeft: \"10px\",\r\n              }}\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                handleCancle();\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  Button,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useStyles } from \"./styles\";\r\nimport AddNotes from \"../../../../components/common/AddNotes\";\r\nimport { useTable, usePagination } from \"react-table\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Table = ({\r\n  columns,\r\n  data,\r\n  fetchData,\r\n  loading,\r\n  pageCount: controlledPageCount,\r\n}) => {\r\n  const {\r\n    getTableProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    gotoPage,\r\n    nextPage,\r\n    pageCount,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0 },\r\n      manualPagination: true,\r\n      pageCount: controlledPageCount,\r\n    },\r\n    usePagination\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchData({ pageIndex, pageSize });\r\n  }, [fetchData, pageIndex, pageSize]);\r\n\r\n  const renderPageButton = () => {\r\n    let buttons = [];\r\n    for (let i = 0; i < pageCount; i++) {\r\n      if (pageIndex === 0) {\r\n        if (\r\n          i == pageIndex ||\r\n          i == pageIndex + 1 ||\r\n          i == pageIndex + 2 ||\r\n          i == pageIndex + 3 ||\r\n          i == pageIndex + 4\r\n        ) {\r\n          buttons.push(\r\n            <button\r\n              className=\"pagination-button\"\r\n              onClick={() => gotoPage(i)}\r\n              style={{ backgroundColor: pageIndex == i ? \"#40ACFB\" : null }}\r\n            >\r\n              {i + 1}\r\n            </button>\r\n          );\r\n        }\r\n      } else if (pageIndex === 1) {\r\n        if (\r\n          i == pageIndex - 1 ||\r\n          i == pageIndex ||\r\n          i == pageIndex + 1 ||\r\n          i == pageIndex + 2 ||\r\n          i == pageIndex + 3\r\n        ) {\r\n          buttons.push(\r\n            <button\r\n              className=\"pagination-button\"\r\n              onClick={() => gotoPage(i)}\r\n              style={{ backgroundColor: pageIndex == i ? \"#40ACFB\" : null }}\r\n            >\r\n              {i + 1}\r\n            </button>\r\n          );\r\n        }\r\n      } else if (pageIndex === pageCount - 1) {\r\n        if (\r\n          i == pageIndex - 4 ||\r\n          i == pageIndex - 3 ||\r\n          i == pageIndex - 2 ||\r\n          i == pageIndex - 1 ||\r\n          i == pageIndex\r\n        ) {\r\n          buttons.push(\r\n            <button\r\n              className=\"pagination-button\"\r\n              onClick={() => gotoPage(i)}\r\n              style={{ backgroundColor: pageIndex == i ? \"#40ACFB\" : null }}\r\n            >\r\n              {i + 1}\r\n            </button>\r\n          );\r\n        }\r\n      } else if (pageIndex === pageCount - 2) {\r\n        if (\r\n          i == pageIndex - 3 ||\r\n          i == pageIndex - 2 ||\r\n          i == pageIndex - 1 ||\r\n          i == pageIndex ||\r\n          i == pageIndex + 1\r\n        ) {\r\n          buttons.push(\r\n            <button\r\n              className=\"pagination-button\"\r\n              onClick={() => gotoPage(i)}\r\n              style={{ backgroundColor: pageIndex == i ? \"#40ACFB\" : null }}\r\n            >\r\n              {i + 1}\r\n            </button>\r\n          );\r\n        }\r\n      } else {\r\n        if (\r\n          i == pageIndex - 2 ||\r\n          i == pageIndex - 1 ||\r\n          i == pageIndex ||\r\n          i == pageIndex + 1 ||\r\n          i == pageIndex + 2\r\n        ) {\r\n          buttons.push(\r\n            <button\r\n              className=\"pagination-button\"\r\n              onClick={() => gotoPage(i)}\r\n              style={{ backgroundColor: pageIndex == i ? \"#40ACFB\" : null }}\r\n            >\r\n              {i + 1}\r\n            </button>\r\n          );\r\n        }\r\n      }\r\n    }\r\n    return buttons;\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <table class=\"role-header\" id=\"table-to-xls\" {...getTableProps()}>\r\n        {/* Table Head */}\r\n        {headerGroups.map((headerGroup) => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map((column) => {\r\n              return (\r\n                <th\r\n                  className={\r\n                    column.Header === \"Company Name\"\r\n                      ? \"borderStart\"\r\n                      : column.Header === \"Notification\"\r\n                      ? \"borderEnd\"\r\n                      : \"borderCenter\"\r\n                  }\r\n                  {...column.getHeaderProps()}\r\n                >\r\n                  {column.render(\"Header\")}\r\n                </th>\r\n              );\r\n            })}\r\n          </tr>\r\n        ))}\r\n\r\n        {/* Table Data */}\r\n        {loading && <div>Loading ...</div>}\r\n        {!loading &&\r\n          rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td\r\n                      className={\r\n                        cell.column.Header === \"Company Name\"\r\n                          ? \"borderStart\"\r\n                          : cell.column.Header === \"Notification\"\r\n                          ? \"borderEnd\"\r\n                          : \"borderCenter\"\r\n                      }\r\n                      {...cell.getCellProps()}\r\n                    >\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n      </table>\r\n      {/* for Pagination */}\r\n      <div\r\n        className=\"pagination\"\r\n        style={{ justifyContent: \"flex-end\", marginBottom: \"5%\" }}\r\n      >\r\n        {/* <select\r\n          className=\"select\"\r\n          val ue={pageSize}\r\n          onChange={(e) => {\r\n            setPageSize(Number(e.target.value));\r\n          }}\r\n        > */}\r\n        <Select\r\n          className=\"select\"\r\n          labelId=\"demo-controlled-open-select-label\"\r\n          id=\"demo-controlled-open-select\"\r\n          // open={open}\r\n          // onClose={handleClose}\r\n          // onOpen={handleOpen}\r\n          value={pageSize}\r\n          onChange={(e) => {\r\n            setPageSize(Number(e.target.value));\r\n          }}\r\n        >\r\n          {[5, 10, 20, 30, 40, 50].map((pageSize) => (\r\n            <option className=\"select\" key={pageSize} value={pageSize}>\r\n              {pageSize}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n        <nav aria-label=\"Page navigation example\">\r\n          <ul className=\"pagination\">\r\n            <li\r\n              className=\"page-item\"\r\n              onClick={() => gotoPage(0)}\r\n              disabled={!canPreviousPage}\r\n            >\r\n              <span\r\n                aria-hidden=\"true\"\r\n                style={{ position: \"relative\", top: \"-3px\" }}\r\n              >\r\n                &laquo;\r\n              </span>\r\n            </li>\r\n            {renderPageButton()}\r\n            <li\r\n              className=\"page-item\"\r\n              onClick={() => gotoPage(pageCount - 1)}\r\n              disabled={!canNextPage}\r\n            >\r\n              <span\r\n                aria-hidden=\"true\"\r\n                style={{ position: \"relative\", top: \"-3px\" }}\r\n              >\r\n                &raquo;\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BussinessWatch = ({ data }) => {\r\n  const [showmodel, setshowmodel] = useState(false);\r\n  const classess = useStyles();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const businessfetchIdRef = React.useRef(0);\r\n  const { companyDetail } = useSelector((state) => state.watch);\r\n  const [tabledata, settableData] = React.useState([]);\r\n\r\n//   const { companyNotes } = useSelector((state) => state.watch);\r\n   console.log(companyDetail, \" notes________________________\");\r\n  //if(companyDetail.business_watches){\r\n\r\n  \r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Note\",\r\n        accessor: \"n_text\",\r\n        // Cell: (val) => {\r\n        //   // console.log(\"val\", val.cell.row.cells[3].value);\r\n        //   return (\r\n        //     <Link to={`/company/${val.row.original.uuid}/Key-Data`}>\r\n        //       {val.value}\r\n        //     </Link>\r\n        //   );\r\n        // },\r\n        width: 200,\r\n      },\r\n\r\n      {\r\n        Header: \"Created At\",\r\n        accessor: \"createdAt\",\r\n        width: 200,\r\n      },\r\n      {\r\n        Header: \"Updated On\",\r\n        accessor: \"updatedAt\",\r\n        width: 200,\r\n      },\r\n\r\n    ],\r\n    []\r\n  );\r\n\r\n  const fetchData = React.useCallback(\r\n    ({ pageSize, pageIndex }) => {\r\n      const fetchId = ++businessfetchIdRef.current;\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        console.log(\"@@@@@@@@@@@@@@#################@@@@@@@@@@@@@@\",companyDetail.notes);\r\n        if (fetchId === businessfetchIdRef.current) {\r\n          const startRow = pageSize * pageIndex;\r\n          const endRow = startRow + pageSize;\r\n          settableData(companyDetail.notes.slice(startRow, endRow));\r\n          setPageCount(Math.ceil(companyDetail.notes.length / pageSize));\r\n          setLoading(false);\r\n        }\r\n      }, 3000);\r\n    },\r\n    [companyDetail.notes]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Grid container style={{ marginBottom: \"10px\" }}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography\r\n            variant=\"h5\"\r\n            style={{ fontWeight: 600 }}\r\n            className={classess.watchHeading}\r\n          >\r\n            Notes\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            //className={classes.filterButton}\r\n            color=\"primary\"\r\n            style={{ backgroundColor: \"#40acfb\", marginLeft: \"20px\" }}\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              setshowmodel(true);\r\n            }}\r\n          >\r\n            Add Notes\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      {companyDetail.notes?.length > 0 ? (\r\n        <Table\r\n          columns={columns}\r\n          data={tabledata}\r\n          fetchData={fetchData}\r\n          loading={loading}\r\n          pageCount={pageCount}\r\n        />\r\n      ) : (\r\n        <Typography variant=\"h6\">No results found</Typography>\r\n      )}\r\n      <AddNotes open={showmodel} setAddNotes={setshowmodel} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BussinessWatch;\r\n"],"sourceRoot":""}