{"version":3,"sources":["pages/BusinessWatch/styles.js","components/common/uploadFile.jsx","pages/BusinessWatch/index.jsx"],"names":["useStyles","makeStyles","main","margin","card","Button","marginTop","marginBottom","backgroundColor","marginRight","mainContainer","padding","subContainer","lable","color","fontSize","fontWeight","mainText","input","width","notesInput","para","actionContainer","downloadCsv","display","alignItems","theme","model","top","left","transform","position","palette","background","paper","borderRadius","boxShadow","shadows","spacing","modelHead","modelPara","modelForm","modelFormItem","modelFormInput","inputItem","buttonToken","divider","UploadFile","open","setshowUploadFile","onCSVUpload","classes","useState","csvData","setCsvData","setCsvArray","handleCapture","console","log","file","reader","FileReader","onload","e","text","target","result","str","delim","headers","slice","indexOf","split","newArray","map","row","values","reduce","obj","header","i","processCSV","readAsText","Modal","onClose","aria-labelledby","aria-describedby","className","id","Divider","Grid","container","TextField","variant","size","placeholder","name","InputProps","endAdornment","type","accept","multiple","hidden","onChange","files","item","style","onClick","marginLeft","BusinessWatch","showmodel","setshowmodel","company_name","company_number","person_first_name","person_last_name","phone","refrence","designation","postal_code","date","Date","notes","email","details","setDetails","Typography","Card","xs","sm","value","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","renderInput","params","data","filename"],"mappings":"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","file":"static/js/60.6b5d228d.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core'\r\n\r\nexport const useStyles = makeStyles({\r\n    main: {\r\n        margin: \"20px\"\r\n    },\r\n    card: {\r\n\r\n    },\r\n    Button: {\r\n        marginTop: \"10px\",\r\n        marginBottom: \"10px\",\r\n        backgroundColor: \"green\",\r\n        marginRight: \"20px\"\r\n    },\r\n    mainContainer: {\r\n        padding: \"15px\"\r\n    },\r\n    subContainer: {\r\n        margin: \" 5px 0\"\r\n    },\r\n    lable: {\r\n        color: \"#727272\",\r\n        fontSize: \"1rem\",\r\n        fontWeight: 500,\r\n        marginBottom:\"5px\"\r\n    },\r\n    mainText: {\r\n        marginBottom: \"10px\"  \r\n    },\r\n    input: {\r\n        width: \"90%\"\r\n    },\r\n    notesInput: {\r\n        width: \"95%\"\r\n    },\r\n    para:{\r\n        color: \"#40acfb\",\r\n        margin:\"0\"\r\n    },\r\n    actionContainer:{\r\n        marginTop:\"10px\"\r\n    },\r\n    downloadCsv:{\r\n        display:\"flex\",\r\n        alignItems: \"center\"\r\n    }\r\n})","import React, { useState } from \"react\";\r\nimport { Grid, TextField, Button, Modal, Divider, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    model: {\r\n        top: `50%`,\r\n        left: `50%`,\r\n        transform: `translate(-${50}%, -${50}%)`,\r\n        position: \"absolute\",\r\n        width: 430,\r\n        backgroundColor: theme.palette.background.paper,\r\n        // height: \"500px\",\r\n        borderRadius: \"30px\",\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    modelHead: {\r\n        margin: \" 20px 0\",\r\n        fontWeight: \"bold\",\r\n    },\r\n    modelPara: {\r\n        margin: \"20px 0px\",\r\n        fontSize: \"20px\",\r\n        color: \"#8a8fa7\",\r\n    },\r\n    modelForm: {\r\n        width: \"100%\",\r\n    },\r\n    modelFormItem: {\r\n        width: \"100%\",\r\n        margin: \"10px 0\",\r\n    },\r\n    modelFormInput: {\r\n        width: \"100%\",\r\n    },\r\n    inputItem: {\r\n        marginTop: \"10px\",\r\n    },\r\n    buttonToken: {\r\n        fontSize: \"8px\",\r\n        fontWeight: \"bold\",\r\n        width: \"121px\",\r\n    },\r\n    divider: {\r\n        margin: \"20px\"\r\n    }\r\n\r\n}));\r\n\r\nexport default function UploadFile({ open, setshowUploadFile , onCSVUpload}) {\r\n    const classes = useStyles();\r\n    const [csvData, setCsvData] =useState([])\r\n\r\n\r\nconst [csvArray, setCsvArray] = useState([]);\r\n\r\nconst processCSV = (str, delim=',') => {\r\n        const headers = str.slice(0,str.indexOf('\\n')).split(delim);\r\n        const rows = str.slice(str.indexOf('\\n')+1).split('\\n');\r\n\r\n        const newArray = rows.map( row => {\r\n            const values = row.split(delim);\r\n            const eachObject = headers.reduce((obj, header, i) => {\r\n                obj[header] = values[i];\r\n                return obj;\r\n            }, {})\r\n            return eachObject;\r\n        })\r\n\r\n         setCsvArray(newArray)\r\n        onCSVUpload(newArray)\r\n        setshowUploadFile(false)\r\n    }\r\n\r\n\r\n  const handleCapture = () => {\r\nconsole.log(\"capturing ....\")\r\n        const file = csvData;\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = function(e) {\r\n            const text = e.target.result;\r\n            console.log(text);\r\n            processCSV(text)\r\n        }\r\n\r\n        reader.readAsText(file);\r\n\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            onClose={() => setshowUploadFile(false)}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\">\r\n            <div className={classes.model}>\r\n                <h2 id=\"simple-modal-title\" className={classes.modelHead}>\r\n                    Upload File\r\n                </h2>\r\n                <Divider className={classes.divider} />\r\n                {/* Model fields */}\r\n                <Grid container className={classes.modelForm}>\r\n                    {/* <TextField\r\n                            className={classes.modelFormInput}\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            label=\"No file choosen\"\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <Button   className={classes.buttonToken} variant=\"contained\" >\r\n                                        Choose File\r\n                                    </Button>\r\n                                ),\r\n                            }}\r\n                        /> */}\r\n               \r\n                        <TextField \r\n                         className={classes.modelFormInput}\r\n                         variant=\"outlined\"\r\n                         size=\"small\"\r\n                         placeholder={ csvData.name ? csvData.name :\"No file choosen\"}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                        <Button\r\n                        className={classes.buttonToken} variant=\"contained\"\r\n                        variant=\"contained\"\r\n                        component=\"label\"\r\n                      >\r\n                        Choose File\r\n                        <input\r\n                          type=\"file\"\r\n                          accept='.csv/.xls'\r\n                          id=\"raised-button-file\"\r\n                          multiple\r\n                          hidden\r\n                          onChange={({target}) => setCsvData(target.files[0] )}\r\n                        />\r\n                      </Button>\r\n                            ),\r\n                        }}\r\n                        />\r\n              \r\n                </Grid>\r\n\r\n                <Grid container>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            style={{ marginTop: \"10px\", backgroundColor: \"#40acfb\" }}\r\n                            color=\"primary\"\r\n                            onClick={() => handleCapture()}>\r\n                            Confirm\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            style={{\r\n                                marginTop: \"10px\",\r\n                                backgroundColor: \"#91979d\",\r\n                                marginLeft: \"10px\",\r\n                            }}\r\n                            color=\"primary\"\r\n                            onClick={() => setshowUploadFile(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Typography, Card, Button, TextField } from \"@material-ui/core\";\r\n//import TextField from '@mui/material/TextField';\r\nimport { useStyles } from \"./styles\";\r\nimport CalendarTodayIcon from \"@mui/icons-material/CalendarToday\";\r\nimport UploadFile from \"../../components/common/uploadFile\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\nimport DatePicker from \"@mui/lab/DatePicker\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nexport default function BusinessWatch() {\r\n  const classes = useStyles();\r\n  const [showmodel, setshowmodel] = useState(false);\r\n  const [details, setDetails] = useState({\r\n    company_name: \"\",\r\n    company_number: \"\",\r\n    person_first_name: \"\",\r\n    person_last_name: \"\",\r\n    phone: \"\",\r\n    refrence: \"\",\r\n    designation: \"\",\r\n    postal_code: \"\",\r\n    date: new Date(),\r\n    notes: \"\",\r\n    email: \"\",\r\n  });\r\n  const csvSample = [\r\n    {\r\n      company_name: \"\",\r\n      company_number: \"\",\r\n      person_first_name: \"\",\r\n      person_last_name: \"\",  \r\n      phone: \"\",\r\n      refrence: \"\",\r\n      designation: \"\",\r\n      postal_code: \"\",\r\n      date: \"\",\r\n      notes: \"\",\r\n      email: \"\",\r\n    },\r\n  ];\r\n\r\n  const onCSVUpload = (data) => {\r\n    console.log(\"csv data\", data[0]);\r\n    setDetails(data[0]);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n      <Typography variant=\"h5\" className={classes.mainText}>\r\n        Business Watch\r\n      </Typography>\r\n      <Card className={classes.card} variant=\"outlined\">\r\n        <Grid container className={classes.mainContainer}>\r\n          {/* first Grid */}\r\n          <Grid container className={classes.subContainer}>\r\n            <Grid item xs={12} sm={4}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                Company Name\r\n              </Typography>\r\n              <TextField\r\n                className={classes.input}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Enter company name\"\r\n                value={details.company_name}\r\n                onChange={(e) =>\r\n                  setDetails({ ...details, company_name: e.target.value })\r\n                }\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={4}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                Company Number\r\n              </Typography>\r\n              <TextField\r\n                className={classes.input}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Enter company Number\"\r\n                value={details.company_number}\r\n                onChange={(e) =>\r\n                  setDetails({ ...details, company_number: e.target.value })\r\n                }\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={4}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                Contact Person First Name\r\n              </Typography>\r\n              <TextField\r\n                className={classes.input}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Enter Contact Person First Name\"\r\n                value={details.person_first_name}\r\n                onChange={(e) =>\r\n                  setDetails({ ...details, person_first_name: e.target.value })\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* second Grid  */}\r\n          <Grid container className={classes.subContainer}>\r\n            <Grid item xs={12} sm={4}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                Enter Contact Person Last Name\r\n              </Typography>\r\n              <TextField\r\n                className={classes.input}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Enter Contact Person Last Name\"\r\n                value={details.person_last_name}\r\n                onChange={(e) =>\r\n                  setDetails({ ...details, person_last_name: e.target.value })\r\n                }\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={4}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                Phone\r\n              </Typography>\r\n              <TextField\r\n                className={classes.input}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Enter Phone Number\"\r\n                value={details.phone}\r\n                onChange={(e) =>\r\n                  setDetails({ ...details, phone: e.target.value })\r\n                }\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={4}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                Reference\r\n              </Typography>\r\n              <TextField\r\n                className={classes.input}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Enter reference\"\r\n                value={details.refrence}\r\n                onChange={(e) =>\r\n                  setDetails({ ...details, refrence: e.target.value })\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Third Grid  */}\r\n          <Grid container className={classes.subContainer}>\r\n            <Grid item xs={12} sm={4}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                Designation\r\n              </Typography>\r\n              <TextField\r\n                className={classes.input}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Enter designation\"\r\n                value={details.designation}\r\n                onChange={(e) =>\r\n                  setDetails({ ...details, designation: e.target.value })\r\n                }\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={4}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                Postal Code\r\n              </Typography>\r\n              <TextField\r\n                className={classes.input}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Enter postal code\"\r\n                value={details.postal_code}\r\n                onChange={(e) =>\r\n                  setDetails({ ...details, postal_code: e.target.value })\r\n                }\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={4}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                Update/Creation Date\r\n              </Typography>\r\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DatePicker\r\n                  value={details.date}\r\n                  onChange={(e) => setDetails({ ...details, date: e })}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      className={classes.input}\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      {...params}\r\n                    />\r\n                  )}\r\n                />\r\n              </LocalizationProvider>\r\n              {/* <TextField\r\n                className={classes.input}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Enter update/creation date\"\r\n                value={details.date}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                   <CalendarTodayIcon />\r\n                  ),\r\n                 }}\r\n              /> */}\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* fourth Grid  */}\r\n          <Grid container className={classes.subContainer}>\r\n            <Grid item xs={12} sm={8}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                Add Notes\r\n              </Typography>\r\n              <TextField\r\n                className={classes.notesInput}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Enter notes\"\r\n                value={details.notes}\r\n                onChange={(e) =>\r\n                  setDetails({ ...details, notes: e.target.value })\r\n                }\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={4}>\r\n              <Typography variant=\"h6\" className={classes.lable}>\r\n                Email\r\n              </Typography>\r\n              <TextField\r\n                className={classes.input}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Enter email\"\r\n                value={details.email}\r\n                onChange={(e) =>\r\n                  setDetails({ ...details, email: e.target.value })\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Action Grid  */}\r\n          <Grid container className={classes.actionContainer}>\r\n            <Grid item>\r\n              <Button\r\n                className={classes.Button}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n              >\r\n                Save\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                className={classes.Button}\r\n                style={{ backgroundColor: \"#5f685f\" }}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                className={classes.Button}\r\n                style={{ backgroundColor: \"#40acfb\" }}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setshowmodel(true);\r\n                }}\r\n              >\r\n                Upload CSV\r\n              </Button>\r\n            </Grid>\r\n            <Grid item className={classes.downloadCsv}>\r\n              <CSVLink\r\n                data={csvSample}\r\n                filename={\"DataSaas-BusinesssWatch.csv\"}\r\n              >\r\n                <p className={classes.para}>Download Sample CSV</p>{\" \"}\r\n              </CSVLink>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n      {/* model */}\r\n\r\n      <UploadFile\r\n        open={showmodel}\r\n        setshowUploadFile={setshowmodel}\r\n        onCSVUpload={(data) => onCSVUpload(data)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}