{"version":3,"sources":["../node_modules/@material-ui/icons/esm/MailOutline.js","../node_modules/@material-ui/icons/esm/Lock.js","pages/Auth/styles.js","pages/Auth/index.jsx"],"names":["createSvgIcon","React","d","useStyles","makeStyles","theme","image","width","height","formheader","margin","Container","padding","background","formContainer","para","color","fontSize","marginBottom","lineHeight","fontFamily","fontWeight","parasignup","marginTop","para2","marginLeft","spacing","withoutLabel","textField","input","textAlign","inputError","Outlined","border","bordeRadius","borderRadius","textpara","positionStart","minHeight","fill","lock","lockMain","button","Auth","dispatch","useDispatch","classes","useState","email","setEmail","password","setPassword","showPassword","setshowPassword","window","innerWidth","setWidth","Error","setError","useEffect","addEventListener","updateWidth","removeEventListener","Grid","container","item","xs","style","display","className","src","alt","justify","Typography","paragraph","variant","direction","FormControl","clsx","OutlinedInput","id","type","placeholder","error","value","onChange","e","target","startAdornment","InputAdornment","position","MailOutline","endAdornment","IconButton","aria-label","edge","onClick","Lock","Button","size","errors","test","length","login","trim","handleLogin"],"mappings":"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","file":"static/js/59.3b099402.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V8l8 5 8-5v10zm-8-7L4 6h16l-8 5z\"\n}), 'MailOutline');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\"\n}), 'Lock');","import { makeStyles } from '@material-ui/core'\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    image: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    },\r\n    formheader: {\r\n        margin: \"30px 0\",\r\n    },\r\n    Container: {\r\n        padding: \" 50px 50px\",\r\n        background: \"#fff\",\r\n    },\r\n    formContainer: {\r\n        padding: \" 30px 10px\",\r\n    },\r\n    para: {\r\n        color: \"#717171\",\r\n        fontSize: \"22px\",\r\n        marginBottom: \"0\",\r\n        lineHeight: \"44px\",\r\n        fontFamily: \"Poppins\",\r\n        fontWeight: \"400\",\r\n    },\r\n    parasignup : {\r\n        color: \"#717171\",\r\n        fontSize: \"22px\",\r\n        marginTop: \"30px\",\r\n        lineHeight: \"44px\",\r\n        fontFamily: \"Poppins\",\r\n        fontWeight: \"400\",\r\n    },\r\n    para2: {\r\n        color: \"#717171\",\r\n        fontSize: \"28px\",\r\n        marginLeft: \"20px\",\r\n        lineHeight: \"44px\",\r\n        fontFamily: \"Poppins\",\r\n        fontWeight: \"400\",\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n        width: \"100%\",\r\n    },\r\n    input: {\r\n        width: \"100%\",\r\n        textAlign:\"center\"\r\n    },\r\n    inputError:{\r\n        color: \"red\",\r\n    },\r\n    Outlined: {\r\n        fontSize: \"20px\",\r\n        background: \"#FFFFFF\",\r\n        border: \"1px solid #DCD9D9\",\r\n        bordeRadius: \"5px\",\r\n        padding: \"0\",\r\n        '& input':{\r\n         borderRadius: \"0!important\",\r\n        },\r\n    },\r\n    textpara: {\r\n        fontSize: \"40px\",\r\n        marginLeft: \"20px\",\r\n        color: \"#000000\",\r\n        lineHeight: \"60px\",\r\n        fontFamily: \"Poppins\",\r\n    },\r\n    positionStart:{\r\n     background: \"#FCF6F6\",\r\n     minHeight: \"61px\",\r\n     margin: \"0\",\r\n     \r\n     '& svg':{\r\n         fill: \"#c1bdbd\",\r\n         margin: \"15px\",\r\n     },\r\n    },\r\n    lock:{\r\n        margin: \"0\",\r\n    },\r\n    lockMain:{\r\n        margin: \"0\",\r\n    },\r\n    button:{\r\n        background: \"#FB404C\", \r\n        bordeRadius: \"5px\",\r\n        fontSize: \"22px\",\r\n        color: \"#FFFFFF\",\r\n        lineHeight: \"60px\",\r\n        fontFamily: \"Poppins\",\r\n        fontWeight: \"500\",\r\n        marginLeft: \"10px\",\r\n    },\r\n}));","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../../redux/actions/authActions\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  IconButton,\r\n  InputLabel,\r\n  InputAdornment,\r\n  FormControl,\r\n  OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport { Lock, MailOutline } from \"@material-ui/icons\";\r\n\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nexport default function Auth() {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showPassword, setshowPassword] = useState(false);\r\n  const [width, setWidth] = useState(window.innerWidth)\r\n  const [Error, setError] = useState({})\r\n\r\n  const handleLogin = () => {\r\n    setError({})\r\n    let errors = {};\r\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n\r\n    if (!email) {\r\n      errors.email = \"Cannot be blank\";\r\n    } else if (!regex.test(email)) {\r\n      errors.email = \"Invalid email format\";\r\n    }\r\n\r\n    if (!password) {\r\n      errors.password = \"Cannot be blank\";\r\n    } else if (password.length < 4) {\r\n      errors.password = \"Password must be more than 4 characters\";\r\n    }\r\n\r\n    if(errors.email  || errors.password){\r\n      setError(errors)\r\n    }else{\r\n      dispatch(login(email.trim(), password));\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", updateWidth)\r\n    return () => window.removeEventListener(\"resize\", updateWidth)\r\n  })\r\n\r\n  const updateWidth = () => {\r\n    setWidth(window.innerWidth)\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      {/* Image  */}\r\n      <Grid item xs={5} style={{ display: width <= 500 ? \"none\" : null }} >\r\n        <img className={classes.image} src={\"/images/Login.png\"} alt=\"logo\" />\r\n      </Grid>\r\n\r\n      {/* Login form   */}\r\n      <Grid item xs={width <= 500 ? 12 : 7} className={classes.Container}>\r\n        <Grid container justify=\"space-between\" className={classes.formheader}>\r\n          <Grid item >\r\n\r\n            <img src={\"/images/logo.png\"} alt=\"logo\" />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography paragraph className={classes.parasignup}>\r\n              {\" \"}\r\n              Dont have an account? SignUP\r\n            </Typography>{\" \"}\r\n\r\n          </Grid>\r\n          {/* <Grid item>\r\n            {\" \"} \r\n            <Typography paragraph className={classes.para}>\r\n              {\" \"}\r\n              Dont have an account?\r\n            </Typography>{\" \"}\r\n          </Grid> */}\r\n        </Grid>\r\n\r\n        {/*  get started */}\r\n        <Grid item style={{background: \"#fff\"}}>\r\n          <Typography variant=\"h3\" className={classes.textpara}>\r\n            Hello! Let's get started\r\n          </Typography>\r\n          <Typography paragraph className={classes.para2}>\r\n            Enter your details below.\r\n          </Typography>\r\n        </Grid>\r\n\r\n        {/* Form  */}\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-between\"\r\n          spacing={2}\r\n          className={classes.formContainer}>\r\n          {/* E-mail field */}\r\n          <Grid item className={classes.input}>\r\n            <FormControl\r\n              className={clsx(classes.margin, classes.textField)}\r\n            >\r\n              {/* <InputLabel htmlFor=\"outlined-adornment-email\">\r\n                Enter e-mail Address{\" \"}\r\n              </InputLabel> */}\r\n              <OutlinedInput\r\n                className={classes.Outlined}\r\n                id=\"outlined-adornment-email\"\r\n                type=\"e-mail\"\r\n                placeholder=\"Enter e-mail Address\"\r\n                error ={Error.email ?  true : false }\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                startAdornment={\r\n                  <InputAdornment position=\"start\" className={classes.positionStart}>\r\n                    <MailOutline />\r\n                  </InputAdornment>\r\n                }\r\n              // labelWidth={70}\r\n              />\r\n            </FormControl>\r\n            {Error.email && <Typography className={classes.inputError}>{Error.email}</Typography>}\r\n          </Grid>\r\n          {/* Password field */}\r\n          <Grid item className={classes.input}>\r\n            <FormControl\r\n              className={clsx(classes.margin, classes.textField)}\r\n              variant=\"outlined\">\r\n              {/* <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                Password\r\n              </InputLabel> */}\r\n              <OutlinedInput\r\n                className={classes.Outlined}\r\n                id=\"outlined-adornment-password\"\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                placeholder=\" Password\"\r\n                error ={Error.password ?  true : false }\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\" className={classes.lockMain}>\r\n                    <IconButton className={classes.lock}\r\n                      aria-label=\"toggle password visibility\"\r\n                      edge=\"end\"\r\n                      onClick={() => setshowPassword(!showPassword)}>\r\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n                startAdornment={\r\n                  <InputAdornment position=\"start\" className={classes.positionStart}>\r\n                    <Lock />\r\n                  </InputAdornment>\r\n                }\r\n              // labelWidth={70}\r\n              />\r\n            </FormControl>\r\n            {Error.password && <Typography className={classes.inputError}>{Error.password}</Typography>}\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <div>\r\n              <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                onClick={() => handleLogin()}>\r\n                SIGN IN\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/*  form Footer */}\r\n        <Grid item>\r\n          <Typography paragraph className={classes.para}>\r\n            Copyright © 2021 BrandName. All rights reserved.{\" \"}\r\n\r\n          </Typography>\r\n          <Typography paragraph className={classes.para}>\r\n            Terms & Conditions | Cookie Policy\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n"],"sourceRoot":""}